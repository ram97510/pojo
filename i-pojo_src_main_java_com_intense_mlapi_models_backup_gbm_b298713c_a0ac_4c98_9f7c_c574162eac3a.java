/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2024-10-08T21:57:46.004+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-b298713c-a0ac-4c98-9f7c-c574162eac3a > gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.example.mlapi;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a", algorithm="gbm")
public class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 16; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* age */ null,
    /* job */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_1.VALUES,
    /* marital */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_2.VALUES,
    /* education */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_3.VALUES,
    /* default */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_4.VALUES,
    /* balance */ null,
    /* housing */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_6.VALUES,
    /* loan */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_7.VALUES,
    /* contact */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_8.VALUES,
    /* day */ null,
    /* month */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_10.VALUES,
    /* duration */ null,
    /* campaign */ null,
    /* pdays */ null,
    /* previous */ null,
    /* poutcome */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_15.VALUES,
    /* y */ gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_16.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.8830151954170445,0.11698480458295547};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.8830151954170445,0.11698480458295547};

  public gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a() { super(NAMES,DOMAINS,"y"); }
  public String getUUID() { return Long.toString(-402094202180073460L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_0.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_1.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_2.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_3.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_4.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_5.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_6.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_7.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_8.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_9.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_10.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_11.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_12.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_13.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_14.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_15.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_16.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_17.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_18.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_19.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_20.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_21.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_22.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_23.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_24.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_25.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_26.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_27.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_28.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_29.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_30.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_31.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_32.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_33.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_34.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_35.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_36.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_37.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_38.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_39.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_40.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_41.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_42.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_43.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_44.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_45.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_46.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_47.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_48.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_49.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_50.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_51.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_52.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_53.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_54.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_55.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_56.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_57.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_58.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_59.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_60.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_61.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_62.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_63.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_64.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_65.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_66.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_67.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_68.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_69.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_70.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_71.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_72.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_73.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_74.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_75.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_76.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_77.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_78.score0(data,preds);
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_79.score0(data,preds);
    preds[2] = preds[1] + -2.0212983583048483;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.38589106359075076);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a implements java.io.Serializable {
  public static final String[] VALUES = new String[16];
  static {
    NamesHolder_gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "age";
      sa[1] = "job";
      sa[2] = "marital";
      sa[3] = "education";
      sa[4] = "default";
      sa[5] = "balance";
      sa[6] = "housing";
      sa[7] = "loan";
      sa[8] = "contact";
      sa[9] = "day";
      sa[10] = "month";
      sa[11] = "duration";
      sa[12] = "campaign";
      sa[13] = "pdays";
      sa[14] = "previous";
      sa[15] = "poutcome";
    }
  }
}
// The class representing column job
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[12];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_1_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "admin.";
      sa[1] = "blue-collar";
      sa[2] = "entrepreneur";
      sa[3] = "housemaid";
      sa[4] = "management";
      sa[5] = "retired";
      sa[6] = "self-employed";
      sa[7] = "services";
      sa[8] = "student";
      sa[9] = "technician";
      sa[10] = "unemployed";
      sa[11] = "unknown";
    }
  }
}
// The class representing column marital
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "divorced";
      sa[1] = "married";
      sa[2] = "single";
    }
  }
}
// The class representing column education
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "primary";
      sa[1] = "secondary";
      sa[2] = "tertiary";
      sa[3] = "unknown";
    }
  }
}
// The class representing column default
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_4_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "yes";
    }
  }
}
// The class representing column housing
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_6_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "yes";
    }
  }
}
// The class representing column loan
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "yes";
    }
  }
}
// The class representing column contact
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "cellular";
      sa[1] = "telephone";
      sa[2] = "unknown";
    }
  }
}
// The class representing column month
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[12];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_10_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "apr";
      sa[1] = "aug";
      sa[2] = "dec";
      sa[3] = "feb";
      sa[4] = "jan";
      sa[5] = "jul";
      sa[6] = "jun";
      sa[7] = "mar";
      sa[8] = "may";
      sa[9] = "nov";
      sa[10] = "oct";
      sa[11] = "sep";
    }
  }
}
// The class representing column poutcome
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "failure";
      sa[1] = "other";
      sa[2] = "success";
      sa[3] = "unknown";
    }
  }
}
// The class representing column y
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_16 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_16_0.fill(VALUES);
  }
  static final class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_ColInfo_16_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "yes";
    }
  }
}

class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_0_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 518.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 312.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.0861765f : 
                        0.13214368f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.08693113f : 
                        0.053367693f)) : 
                 (data[11 /* duration */] < 174.5f ? 
                     (data[11 /* duration */] < 94.5f ? 
                        -0.06305262f : 
                        0.16856475f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 287.5f ? 
                        0.3707818f : 
                        0.49324727f))) : 
             (data[11 /* duration */] < 162.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 132.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.038782164f : 
                        0.19007722f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.2561431f : 
                        0.56214255f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        0.300292f : 
                        0.59708166f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        0.39925417f : 
                        0.6556347f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 828.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 669.5f ? 
                        0.04480231f : 
                        0.17231517f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.1835453f : 
                        0.37024698f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.27397576f : 
                        0.6418387f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.68540144f : 
                        0.8312008f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 1020.5f ? 
                        0.23877357f : 
                        0.3684207f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.39625707f : 
                        0.55768454f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.36880618f : 
                        0.48007894f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[1])) ? 
                        0.2963156f : 
                        0.56823003f)))));
    return pred;
  } // constant pool size = 226B, number of visited nodes = 31, static init size = 600B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 12, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {3, 0, 0, 0};
  // {01010011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-54, 10, 0, 0};
  // {00001010 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {80, 12, 0, 0};
  // {11110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-17, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {11001111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-13, 15, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {01100011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-58, 13, 0, 0};
  // {01011111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-6, 14, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {6, 0, 0, 0};
  // {00101101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-76, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {10101111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-11, 4, 0, 0};
  // {10100111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-27, 0, 0, 0};
  // {01000011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-62, 9, 0, 0};
  // {11100001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-121, 15, 0, 0};
  // {11001111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-13, 15, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_1_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 523.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 225.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.0968617f : 
                        -0.026271604f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.022763036f : 
                        0.33393908f)) : 
                 (data[11 /* duration */] < 131.0f ? 
                     (data[11 /* duration */] < 79.5f ? 
                        -0.09577688f : 
                        0.067350954f) : 
                     (data[11 /* duration */] < 198.5f ? 
                        0.17943987f : 
                        0.2881044f))) : 
             (data[11 /* duration */] < 161.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 131.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        0.03402655f : 
                        0.24405198f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.17831665f : 
                        0.3435252f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        0.20682535f : 
                        0.35554907f) : 
                     (data[11 /* duration */] < 212.5f ? 
                        0.32158715f : 
                        0.38260284f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 807.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 634.5f ? 
                        0.026258077f : 
                        0.12670618f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.14203869f : 
                        0.24972539f)) : 
                 (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.19527537f : 
                        0.3697601f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.34631675f : 
                        0.449763f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (data[11 /* duration */] < 872.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.09566818f : 
                        0.28085837f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[2])) ? 
                        0.23758017f : 
                        0.39818788f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[15])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        0.25941548f : 
                        0.31322291f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.27390444f : 
                        0.50655526f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 12, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-120, 8, 0, 0};
  // {00001010 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {80, 12, 0, 0};
  // {01110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-18, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {01100011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-58, 13, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10111111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-3, 13, 0, 0};
  // {11001111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-13, 6, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {3, 0, 0, 0};
  // {00010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {40, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {4, 0, 0, 0};
  // {01000111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-30, 9, 0, 0};
  // {00011111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-8, 13, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_2_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 451.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.0f ? 
                        -0.072649226f : 
                        0.40123692f) : 
                     (data[11 /* duration */] < 121.5f ? 
                        -0.07062373f : 
                        0.18978582f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 184.0f ? 
                     (data[11 /* duration */] < 94.0f ? 
                        -0.056644376f : 
                        0.11139827f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        0.12370751f : 
                        0.22699024f))) : 
             (data[11 /* duration */] < 132.0f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 7.5f ? 
                        0.14076541f : 
                        -0.03768448f) : 
                     (data[11 /* duration */] < 82.5f ? 
                        -0.03602675f : 
                        0.21750465f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 215.5f ? 
                        0.23002724f : 
                        0.044538252f) : 
                     (data[11 /* duration */] < 177.5f ? 
                        0.21884404f : 
                        0.2681306f)))) : 
         (data[11 /* duration */] < 635.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.034976427f : 
                        0.06267791f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.094773f : 
                        0.29948738f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 486.0f ? 
                        0.37858546f : 
                        0.18799338f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.29681644f : 
                        0.37324294f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 870.5f ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.10257215f : 
                        0.40001708f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        0.17072481f : 
                        0.23796938f)) : 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[2])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[15])) ? 
                        0.19309355f : 
                        0.32815284f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.22464806f : 
                        0.27613965f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 12, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {00010011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-56, 10, 0, 0};
  // {11110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-17, 12, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 0, 0, 0};
  // {11111111 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-1, 8, 0, 0};
  // {00100011 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-60, 4, 0, 0};
  // {11001111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-13, 14, 0, 0};
  // {00000001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-128, 10, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-124, 12, 0, 0};
  // {01110010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {78, 13, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {5, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {4, 0, 0, 0};
  // {11011011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-37, 12, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_3_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 451.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 209.5f ? 
                        -0.09474791f : 
                        -0.03759633f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                        -0.018076405f : 
                        0.2452239f)) : 
                 (data[11 /* duration */] < 132.0f ? 
                     (data[11 /* duration */] < 79.5f ? 
                        -0.091877215f : 
                        0.053305637f) : 
                     (data[11 /* duration */] < 200.5f ? 
                        0.1143982f : 
                        0.17364715f))) : 
             (data[11 /* duration */] < 162.0f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 113.5f ? 
                        -0.008842947f : 
                        0.10568837f) : 
                     (data[9 /* day */] < 7.5f ? 
                        0.029566936f : 
                        0.24883018f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (data[13 /* pdays */] < 45.0f ? 
                        0.027734652f : 
                        0.21786135f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.04172424f : 
                        0.23273695f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 652.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.02539867f : 
                        0.05793013f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.08192798f : 
                        0.2131553f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 486.5f ? 
                        0.2851249f : 
                        0.14187244f) : 
                     (data[0 /* age */] < 41.5f ? 
                        0.22672318f : 
                        0.26609656f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 886.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.08675047f : 
                        0.29080045f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.1336364f : 
                        0.18282971f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[15])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[2])) ? 
                        0.15208852f : 
                        0.19526789f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.17601274f : 
                        0.2827284f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 31, static init size = 480B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 12, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-120, 12, 0, 0};
  // {01101110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {118, 14, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 0, 0, 0};
  // {11111111 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-1, 8, 0, 0};
  // {00100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-60, 12, 0, 0};
  // {11001111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-13, 14, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-124, 12, 0, 0};
  // {10111111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-3, 4, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {4, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {5, 0, 0, 0};
  // {00011111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-8, 13, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_4_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 437.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.0f ? 
                        -0.08943848f : 
                        0.24009919f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.040272307f : 
                        0.204623f)) : 
                 (data[11 /* duration */] < 128.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.03440244f : 
                        0.10253657f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 78.5f ? 
                        0.15226696f : 
                        0.081207864f))) : 
             (data[11 /* duration */] < 132.0f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.11390238f : 
                        0.0569663f) : 
                     (data[11 /* duration */] < 81.5f ? 
                        -0.02261926f : 
                        0.12898855f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[6])) ? 
                        0.082946025f : 
                        0.1647015f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.15342897f : 
                        0.19741951f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 648.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (data[11 /* duration */] < 498.5f ? 
                        -0.05242769f : 
                        0.024211993f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.06948849f : 
                        0.1752321f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.07195696f : 
                        0.19021289f) : 
                     (data[11 /* duration */] < 474.5f ? 
                        0.26612625f : 
                        0.1992615f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 882.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.07261449f : 
                        0.23364425f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                        0.10892345f : 
                        0.16746627f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[15])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                        0.15765977f : 
                        0.12447358f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.1627068f : 
                        0.24792725f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 0, 0, 0};
  // {01010011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-54, 10, 0, 0};
  // {00001011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-48, 1, 0, 0};
  // {01110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-18, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01001011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-46, 13, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 0, 0, 0};
  // {00100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-60, 12, 0, 0};
  // {11001111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-13, 14, 0, 0};
  // {10011111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-7, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-124, 12, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {4, 0, 0, 0};
  // {00011011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-40, 13, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_5_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 152.5f ? 
                        -0.0998145f : 
                        -0.050211374f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 224.5f ? 
                        0.04473775f : 
                        0.49279627f)) : 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                        -0.048050217f : 
                        0.13634486f) : 
                     (data[11 /* duration */] < 128.5f ? 
                        -0.017538667f : 
                        0.1218341f))) : 
             (data[11 /* duration */] < 162.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 5.5f ? 
                        0.13015983f : 
                        0.010172113f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                        0.08840302f : 
                        0.2838702f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (data[13 /* pdays */] < 47.0f ? 
                        0.01014157f : 
                        0.1606524f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.016044289f : 
                        0.16360869f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 646.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.01562764f : 
                        0.28551143f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.072565295f : 
                        0.22649509f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 24.5f ? 
                        0.13823824f : 
                        -0.011368197f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 44.5f ? 
                        0.15416884f : 
                        0.21213001f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 880.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.06328913f : 
                        0.21783648f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.09183459f : 
                        0.13323738f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.086284325f : 
                        0.17930107f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.12097923f : 
                        0.17886099f)))));
    return pred;
  } // constant pool size = 201B, number of visited nodes = 31, static init size = 450B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-115, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {00110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-116, 12, 0, 0};
  // {01101110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {118, 14, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00100000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 4, 0, 0};
  // {10100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-123, 8, 0, 0};
  // {11011101 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-69, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {00100000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {4, 12, 0, 0};
  // {10101111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-11, 4, 0, 0};
  // {01010111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-22, 13, 0, 0};
  // {10000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-127, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_6_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 393.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.0f ? 
                        -0.08779381f : 
                        0.13078843f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.037335392f : 
                        0.1356037f)) : 
                 (data[11 /* duration */] < 104.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 78.5f ? 
                        -0.09470019f : 
                        0.035207752f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.070722364f : 
                        0.14219494f))) : 
             (data[11 /* duration */] < 162.0f ? 
                 (data[11 /* duration */] < 79.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.08434871f : 
                        0.07880068f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.05193997f : 
                        0.13303094f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 229.5f ? 
                        0.121855296f : 
                        0.006019189f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.015531573f : 
                        0.14710389f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 632.5f ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 478.5f ? 
                     (data[0 /* age */] < 31.0f ? 
                        -0.0097295f : 
                        -0.08296725f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.018789764f : 
                        0.056166843f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 377.5f ? 
                        0.05582601f : 
                        0.38556823f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.11171522f : 
                        0.19964142f))) : 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 833.5f ? 
                        0.010318667f : 
                        0.07227727f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[15])) ? 
                        0.08859147f : 
                        0.14957343f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 967.5f ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[15])) ? 
                        0.10629663f : 
                        0.1746823f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.10539764f : 
                        0.15664847f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-128, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 0, 0, 0};
  // {00110110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {108, 0, 0, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-120, 8, 0, 0};
  // {01110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-18, 12, 0, 0};
  // {11011111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-5, 7, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {11111111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-1, 4, 0, 0};
  // {00100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-60, 12, 0, 0};
  // {00100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {68, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {3, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {4, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {4, 0, 0, 0};
  // {10101011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-43, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_7_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 365.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.018609565f : 
                        -0.08020271f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 211.5f ? 
                        0.011830841f : 
                        0.20083351f)) : 
                 (data[11 /* duration */] < 104.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 74.5f ? 
                        -0.09585581f : 
                        -0.02491179f) : 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                        -0.0066347993f : 
                        0.08558073f))) : 
             (data[11 /* duration */] < 132.0f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.11361337f : 
                        0.037766837f) : 
                     (data[13 /* pdays */] < 100.5f ? 
                        0.12682404f : 
                        0.0070175286f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        0.042522993f : 
                        0.108043484f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        0.09856948f : 
                        0.14513293f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 632.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 478.5f ? 
                        -0.07052645f : 
                        0.00896702f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.046231627f : 
                        0.14724198f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (data[11 /* duration */] < 436.5f ? 
                        0.05431107f : 
                        0.12728952f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.13541913f : 
                        0.20798422f))) : 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 833.5f ? 
                        0.00922517f : 
                        0.06315844f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 900.5f ? 
                        0.068764485f : 
                        0.09668254f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 115.5f ? 
                        0.09130775f : 
                        -0.015158684f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.048218325f : 
                        0.115028515f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-115, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01010011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-54, 10, 0, 0};
  // {00001011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-48, 1, 0, 0};
  // {01110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-18, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01001011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-46, 13, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {00100011 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-60, 4, 0, 0};
  // {01010110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {106, 6, 0, 0};
  // {00101101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-76, 2, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {3, 0, 0, 0};
  // {01111110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {126, 13, 0, 0};
  // {11101111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-9, 11, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_8_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 365.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 144.5f ? 
                     (data[0 /* age */] < 25.5f ? 
                        -0.0115468865f : 
                        -0.09052399f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                        -0.07260179f : 
                        0.024924656f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 172.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        0.017617002f : 
                        0.26418197f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.06610577f : 
                        0.12684402f))) : 
             (data[11 /* duration */] < 164.0f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 149.5f ? 
                        0.011161573f : 
                        -0.11185226f) : 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
                        0.084393986f : 
                        -0.07301205f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.09083984f : 
                        0.12747754f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        7.087098E-4f : 
                        0.10975102f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 632.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[6])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 384.5f ? 
                        -0.003476056f : 
                        0.28010413f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.046482228f : 
                        0.2765739f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        0.05468681f : 
                        0.112993866f) : 
                     (data[13 /* pdays */] < 144.5f ? 
                        0.0940475f : 
                        0.2036058f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 867.5f ? 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[2])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 18.0f ? 
                        0.03894748f : 
                        0.09529102f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        0.035003252f : 
                        0.09545139f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 2208.5f ? 
                        0.05783246f : 
                        0.10336896f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.08317578f : 
                        0.12929308f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-128, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {00100001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-124, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 0, 0, 0};
  // {01011111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-6, 13, 0, 0};
  // {01110011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-50, 9, 0, 0};
  // {01101110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {118, 14, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {01000110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {98, 8, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {01111110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {126, 13, 0, 0};
  // {11010111 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-21, 8, 0, 0};
  // {10000101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-95, 9, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_9_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 365.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 7.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.0053828917f : 
                        -0.08167403f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.058696125f : 
                        0.2494978f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.004016395f : 
                        0.1045026f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 203.5f ? 
                        0.037469774f : 
                        0.15218271f))) : 
             (data[11 /* duration */] < 130.0f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 7.5f ? 
                        0.06966183f : 
                        -0.05537789f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.09541472f : 
                        0.09057781f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[13 /* pdays */] < 100.5f ? 
                        0.094812855f : 
                        0.026409138f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        0.068101756f : 
                        0.11423588f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 632.5f ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 497.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.0845826f : 
                        -0.019150732f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.024415439f : 
                        0.042296242f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        0.034463104f : 
                        0.14209569f) : 
                     (data[9 /* day */] < 5.5f ? 
                        0.17926547f : 
                        0.09284813f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 25.5f ? 
                        0.01850072f : 
                        0.0776189f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.04407518f : 
                        0.105283335f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1168.5f ? 
                        0.04041487f : 
                        0.097309664f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.07228969f : 
                        0.11368972f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-115, 12, 0, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {98, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 0, 0, 0};
  // {00010001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 10, 0, 0};
  // {01111111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-2, 15, 0, 0};
  // {11110111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-17, 12, 0, 0};
  // {11001011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-45, 13, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {11111011 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-33, 4, 0, 0};
  // {10001011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-47, 14, 0, 0};
  // {00100011 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-60, 4, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {10111011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-35, 12, 0, 0};
  // {01001110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {114, 0, 0, 0};
  // {01010111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-22, 13, 0, 0};
  // {10000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-127, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_10_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 365.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.10333782f : 
                        0.31907105f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.056908656f : 
                        0.29652685f)) : 
                 (data[9 /* day */] < 7.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.048297748f : 
                        0.08271962f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        -0.0015273796f : 
                        0.081094794f))) : 
             (data[11 /* duration */] < 164.0f ? 
                 (data[11 /* duration */] < 79.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.08425773f : 
                        0.037271693f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.0020612061f : 
                        0.07089411f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (data[13 /* pdays */] < 47.0f ? 
                        -0.026120601f : 
                        0.09558628f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 280.5f ? 
                        0.006719331f : 
                        0.120803416f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 614.5f ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[15])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 392.0f ? 
                        0.01217037f : 
                        0.21406548f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.07104801f : 
                        0.20155977f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.004529603f : 
                        0.16827573f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        0.08068679f : 
                        0.1398204f))) : 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 884.0f ? 
                        7.1725354E-4f : 
                        0.041415285f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.04451702f : 
                        0.071120046f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 951.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.059870027f : 
                        0.12942736f) : 
                     (data[9 /* day */] < 7.5f ? 
                        0.042176038f : 
                        0.09604768f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-115, 12, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {3, 0, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 2, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {64, 0, 0, 0};
  // {00100001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-124, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01100110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {102, 0, 0, 0};
  // {01011011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-38, 13, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {6, 0, 0, 0};
  // {10101000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {21, 2, 0, 0};
  // {10001110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {113, 7, 0, 0};
  // {01001111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-14, 4, 0, 0};
  // {11000100 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {35, 10, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {5, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {3, 0, 0, 0};
  // {01100011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-58, 1, 0, 0};
  // {00000100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {32, 9, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_11_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 249.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 125.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.093592905f : 
                        -0.065457195f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.07450822f : 
                        0.006384912f)) : 
                 (data[11 /* duration */] < 92.5f ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.06899049f : 
                        0.14945625f) : 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 2.5f ? 
                        0.076805905f : 
                        -0.03322594f))) : 
             (data[11 /* duration */] < 130.0f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 7.5f ? 
                        0.056104112f : 
                        -0.053480454f) : 
                     (data[9 /* day */] < 8.5f ? 
                        -0.046382148f : 
                        0.09526072f)) : 
                 (Double.isNaN(data[14]) || data[14 /* previous */] < 7.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 1509.5f ? 
                        0.07632278f : 
                        0.02046993f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.09424557f : 
                        0.18369658f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 669.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 499.5f ? 
                        -0.08821378f : 
                        0.007826177f) : 
                    0.39089558f) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 29.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.020978486f : 
                        0.06420965f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.027838666f : 
                        0.2269091f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 614.5f ? 
                        0.024416529f : 
                        0.05097086f) : 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[6])) ? 
                        0.05797688f : 
                        0.10729342f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                        0.09377317f : 
                        0.035495333f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 68.5f ? 
                        0.19930531f : 
                        -0.018267255f)))));
    return pred;
  } // constant pool size = 197B, number of visited nodes = 30, static init size = 450B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-128, 4, 0, 0};
  // {10000000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 5, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {00010001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 10, 0, 0};
  // {11111110 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {127, 12, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {11011001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-101, 12, 0, 0};
  // {00000010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 4, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 0, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-60, 8, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {64, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_12_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 259.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.074915275f : 
                        0.05800243f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 203.5f ? 
                        0.018101014f : 
                        0.32929444f)) : 
                 (data[11 /* duration */] < 104.0f ? 
                     (data[11 /* duration */] < 62.5f ? 
                        -0.10091164f : 
                        -0.025565416f) : 
                     (data[9 /* day */] < 7.5f ? 
                        -0.020991378f : 
                        0.060507897f))) : 
             (data[11 /* duration */] < 130.0f ? 
                 (data[13 /* pdays */] < 100.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.0040749013f : 
                        0.13677995f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.05841796f : 
                        0.040935002f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 5429.5f ? 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 8.0f ? 
                        0.057410877f : 
                        0.15085445f) : 
                     (data[14 /* previous */] < 2.5f ? 
                        0.04046308f : 
                        -0.0887154f)))) : 
         (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 551.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 379.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.028192401f : 
                        0.116939224f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.128827f : 
                        0.2314375f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 893.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.0033082354f : 
                        0.045730934f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[15])) ? 
                        0.011624194f : 
                        0.06302911f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 31.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 656.5f ? 
                        0.023223614f : 
                        0.04618365f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.06414979f : 
                        0.12431848f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 95.5f ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[2])) ? 
                        0.12011575f : 
                        0.22512597f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.039140265f : 
                        0.10446356f)))));
    return pred;
  } // constant pool size = 196B, number of visited nodes = 31, static init size = 420B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-119, 12, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 1, 0, 0};
  // {01000000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 10, 0, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-124, 8, 0, 0};
  // {11111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {127, 3, 0, 0};
  // {01100011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-58, 13, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {12, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-127, 0, 0, 0};
  // {01000110 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {98, 9, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {00001101 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-80, 5, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_13_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 154.5f ? 
                     (data[0 /* age */] < 25.5f ? 
                        -0.022159617f : 
                        -0.089507304f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                        -0.05876826f : 
                        0.045369707f)) : 
                 (data[11 /* duration */] < 93.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 60.5f ? 
                        -0.10146522f : 
                        -0.03114528f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.018807596f : 
                        0.048583597f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (data[9 /* day */] < 10.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.036923446f : 
                        0.10336033f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.07609892f : 
                        -0.0027120744f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (data[11 /* duration */] < 85.5f ? 
                        -0.05963514f : 
                        0.07876553f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                        -0.08327341f : 
                        0.12077225f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 501.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.089099355f : 
                        0.2521386f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.25150108f : 
                        0.3818689f)) : 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[2])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.010118592f : 
                        0.033369202f) : 
                     (data[11 /* duration */] < 713.5f ? 
                        0.021887358f : 
                        0.059560336f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 575.5f ? 
                        -0.014139209f : 
                        0.035064522f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        0.035622284f : 
                        0.13044609f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[15])) ? 
                        0.016193375f : 
                        0.07651332f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[15])) ? 
                        0.058995746f : 
                        0.20756215f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10010001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-119, 4, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {7, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01011011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-38, 13, 0, 0};
  // {11001111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-13, 6, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 2, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {11011001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-101, 12, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 2, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 0, 0, 0};
  // {00000010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {64, 4, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-60, 8, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {10000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 1, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {64, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {14, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {11, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_14_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 129.5f ? 
                     (data[11 /* duration */] < 78.0f ? 
                        -0.09776152f : 
                        -0.066177845f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.05062132f : 
                        0.022356847f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.08975358f : 
                        0.020590099f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.0662773f : 
                        0.110866286f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.11658747f : 
                        0.010835266f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.10404294f : 
                        0.033948813f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 199.5f ? 
                     (data[11 /* duration */] < 85.5f ? 
                        -0.05587316f : 
                        0.07063301f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                        -0.07712212f : 
                        0.10652545f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 538.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.08020219f : 
                        0.18263662f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 38.5f ? 
                        0.315877f : 
                        0.19662121f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1009.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 5996.5f ? 
                        0.017065188f : 
                        -0.08267864f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.0f ? 
                        0.04008338f : 
                        0.17192121f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 403.5f ? 
                        0.021459365f : 
                        0.17169838f) : 
                     (data[13 /* pdays */] < 96.0f ? 
                        0.09419541f : 
                        0.05753024f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[15])) ? 
                        0.014554476f : 
                        0.06915039f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 427.5f ? 
                        0.2021195f : 
                        0.067875445f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-128, 0, 0, 0};
  // {10011000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 4, 0, 0};
  // {00111101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-68, 2, 0, 0};
  // {10000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {65, 1, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {5, 0, 0, 0};
  // {01011011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-38, 13, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {01000110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {98, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
  // {11011001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-101, 12, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 2, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-60, 8, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {64, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {14, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_15_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 249.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.0014220469f : 
                        -0.07573082f) : 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.105118446f : 
                        0.1329286f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 161.5f ? 
                     (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.024274739f : 
                        0.18482293f) : 
                     (data[13 /* pdays */] < 103.5f ? 
                        0.10322052f : 
                        0.027762f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.057319246f : 
                        0.024363533f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.014501527f : 
                        0.11373687f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[6])) ? 
                        -0.026793165f : 
                        0.038241643f) : 
                     (data[9 /* day */] < 9.5f ? 
                        0.0064243344f : 
                        0.13362567f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 468.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 410.5f ? 
                        -0.09615805f : 
                        -0.046913415f) : 
                    0.24948744f) : 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[2])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.013068927f : 
                        0.027399044f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 735.5f ? 
                        0.019244809f : 
                        0.053698834f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 833.5f ? 
                        -0.00230732f : 
                        0.04507773f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.029949436f : 
                        0.108626515f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[3])) ? 
                        0.005520747f : 
                        0.063576944f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 68.5f ? 
                        0.12426547f : 
                        -0.056794617f)))));
    return pred;
  } // constant pool size = 217B, number of visited nodes = 30, static init size = 570B
  // {10010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-119, 12, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-128, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00001110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {112, 3, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-120, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
  // {11011001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-101, 12, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {5, 0, 0, 0};
  // {01000010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {66, 4, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-60, 8, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 0};
  // {10000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {1, 1, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {64, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {6, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_16_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 128.5f ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.021653073f : 
                        0.46627817f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.090304755f : 
                        -0.07431857f)) : 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        -0.07129495f : 
                        0.12391286f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 31.5f ? 
                        -0.013131673f : 
                        0.06768415f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.08110143f : 
                        -0.033549596f) : 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
                        0.08601359f : 
                        -0.07680949f)) : 
                 (data[11 /* duration */] < 73.5f ? 
                     (Double.isNaN(data[7 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.07742623f : 
                        0.10514943f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.032934986f : 
                        0.18506737f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 759.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 474.5f ? 
                        -0.08717593f : 
                        0.0033181498f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.14129055f : 
                        0.2631328f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 861.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.0f ? 
                        -9.855888E-5f : 
                        0.11040073f) : 
                     (data[9 /* day */] < 10.0f ? 
                        -0.004973993f : 
                        0.07995884f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.015783943f : 
                        0.07448461f) : 
                     (data[0 /* age */] < 25.5f ? 
                        0.1875386f : 
                        0.07677334f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                        0.060102608f : 
                        0.0076709175f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                        0.031385873f : 
                        0.1360204f)))));
    return pred;
  } // constant pool size = 201B, number of visited nodes = 31, static init size = 450B
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 12, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {16, 2, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {11011001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-101, 12, 0, 0};
  // {11111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-1, 3, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-60, 8, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 1, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {64, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {11, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_17_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 605.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.0f ? 
                        -0.052312527f : 
                        0.1190952f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        0.03417097f : 
                        0.18527393f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 25.5f ? 
                        0.13154608f : 
                        -0.008514215f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 47.5f ? 
                        0.08112575f : 
                        -0.01701277f))) : 
             (data[11 /* duration */] < 215.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.033330064f : 
                        0.026714824f) : 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 5.5f ? 
                        0.08198122f : 
                        -0.05929866f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -0.0642548f : 
                        0.052635357f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.040460356f : 
                        0.07967102f)))) : 
         (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[2])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 892.5f ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 1550.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.020501316f : 
                        0.016336264f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        0.030859336f : 
                        0.15356217f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 12083.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 2943.0f ? 
                        0.02679857f : 
                        0.07686087f) : 
                    -0.11803979f)) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 111.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.023005217f : 
                        0.081338644f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        -0.1547421f : 
                        -0.0119672315f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 53.5f ? 
                        0.01779419f : 
                        -0.083121225f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[8])) ? 
                        0.032218646f : 
                        0.061402533f)))));
    return pred;
  } // constant pool size = 212B, number of visited nodes = 30, static init size = 540B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-124, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-127, 0, 0, 0};
  // {00010011 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-56, 5, 0, 0};
  // {11110010 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {79, 14, 0, 0};
  // {11110101 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-81, 14, 0, 0};
  // {11001101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-77, 13, 0, 0};
  // {01001110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {114, 6, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {5, 0, 0, 0};
  // {10101110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {117, 7, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {01010110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {106, 13, 0, 0};
  // {00000101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-96, 13, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {5, 0, 0, 0};
  // {11101111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-9, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {1, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_18_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                 (data[0 /* age */] < 21.5f ? 
                     (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.022186253f : 
                        0.4060559f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.08736986f : 
                        -0.05103006f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (data[13 /* pdays */] < 96.0f ? 
                        0.07421559f : 
                        -0.06206471f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 140.5f ? 
                        0.0059323395f : 
                        0.12771875f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 190.5f ? 
                        -0.0694566f : 
                        0.0044183056f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 4220.5f ? 
                        0.022485102f : 
                        0.18772304f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                        -0.046633106f : 
                        0.023371486f) : 
                     (data[9 /* day */] < 9.5f ? 
                        -0.02554526f : 
                        0.19373845f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 464.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 30.5f ? 
                        -0.059293278f : 
                        -0.09318624f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 49.5f ? 
                        0.25010708f : 
                        0.043993283f)) : 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[2])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.014448285f : 
                        0.021572256f) : 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                        -0.030202737f : 
                        0.04265338f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.0075968355f : 
                        0.030232422f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.0034971097f : 
                        0.15111533f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.0057325335f : 
                        0.053410657f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 427.5f ? 
                        0.13923681f : 
                        0.03763118f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {10010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-119, 12, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {00001010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {80, 2, 0, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {98, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-127, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {12, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {11011001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-101, 14, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {5, 0, 0, 0};
  // {01000010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {66, 4, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {00100011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-60, 8, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {113, 15, 0, 0};
  // {10101011 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-43, 7, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {64, 0, 0, 0};
  // {11101101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-73, 4, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_19_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 341.5f ? 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.0f ? 
                        -0.076282576f : 
                        0.042730518f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.0076543726f : 
                        0.20044714f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        0.030335883f : 
                        0.16692744f) : 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 1.5f ? 
                        -0.02358748f : 
                        0.045599844f))) : 
             (data[13 /* pdays */] < 83.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.15715432f : 
                        -0.011744586f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.026377022f : 
                        0.1516581f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (data[13 /* pdays */] < 96.5f ? 
                        0.060281068f : 
                        0.011231395f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.050396547f : 
                        0.15372875f)))) : 
         (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[15])) ? 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[2])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 771.5f ? 
                        -0.004662014f : 
                        0.019974072f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        1.7172217E-5f : 
                        0.116134904f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 699.5f ? 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                        -0.021118505f : 
                        0.035282888f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[15])) ? 
                        -0.037898652f : 
                        0.039880313f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                    -0.17994648f : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 51.5f ? 
                        0.068952955f : 
                        -0.061377402f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.13580967f : 
                        0.1210122f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.050718307f : 
                        0.0845127f)))));
    return pred;
  } // constant pool size = 217B, number of visited nodes = 30, static init size = 570B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01110001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-114, 12, 0, 0};
  // {11000010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {67, 2, 0, 0};
  // {11010010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {75, 1, 0, 0};
  // {01001010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {82, 8, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {5, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-124, 12, 0, 0};
  // {00010011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-56, 8, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {5, 0, 0, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {61, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {13, 0, 0, 0};
  // {11011101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-69, 15, 0, 0};
  // {11101101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-73, 13, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {7, 0, 0, 0};
  // {10111111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-3, 4, 0, 0};
  // {01010111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-22, 14, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_20_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 124.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 78.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 425.0f ? 
                        -0.090607405f : 
                        -0.11391214f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.08425876f : 
                        -0.017676104f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (data[11 /* duration */] < 95.0f ? 
                        -0.11676089f : 
                        -0.101075575f) : 
                     (data[11 /* duration */] < 80.0f ? 
                        -0.08015686f : 
                        0.07269523f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
                        -0.1047508f : 
                        -0.09861714f) : 
                     (data[0 /* age */] < 44.5f ? 
                        0.6575969f : 
                        0.14465925f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 25.5f ? 
                        0.10203352f : 
                        -0.0065282006f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        0.09807538f : 
                        0.37117225f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 464.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 30.5f ? 
                        -0.05498218f : 
                        -0.09127098f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 49.5f ? 
                        0.22339942f : 
                        0.041378926f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1239.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 6169.5f ? 
                        0.01045998f : 
                        -0.08489211f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.02104806f : 
                        0.060823616f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 1446.5f ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        0.0028676083f : 
                        0.052338213f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.008735298f : 
                        0.054000467f)) : 
                 (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.054133493f : 
                        0.05697305f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.033926602f : 
                        0.09617077f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-128, 0, 0, 0};
  // {10010011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-55, 14, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {3, 0, 0, 0};
  // {10000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 6, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {64, 0, 0, 0};
  // {01000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-126, 2, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {11011001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-101, 14, 0, 0};
  // {11011011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-37, 1, 0, 0};
  // {00100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-60, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {10111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {125, 3, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {10, 0, 0, 0};
  // {11001101 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-77, 5, 0, 0};
  // {11111010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {95, 6, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_21_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                 (data[0 /* age */] < 21.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 165.5f ? 
                        0.043433625f : 
                        0.38461375f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 61.5f ? 
                        -0.07355584f : 
                        0.06329273f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (data[13 /* pdays */] < 96.0f ? 
                        0.054447636f : 
                        -0.048880074f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 165.5f ? 
                        0.029915446f : 
                        0.165987f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                        -0.07525012f : 
                        -0.024665508f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.040161945f : 
                        0.064865485f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
                        -0.0027088972f : 
                        0.0797757f) : 
                     (data[9 /* day */] < 9.5f ? 
                        -0.02111097f : 
                        0.16058266f)))) : 
         (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[6])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 869.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 377.5f ? 
                        -0.019107489f : 
                        0.15434214f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 57.5f ? 
                        0.023296945f : 
                        0.12961064f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 79.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.02073366f : 
                        0.1032736f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.016347537f : 
                        0.119860604f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 31.5f ? 
                     (data[0 /* age */] < 25.5f ? 
                        0.09299939f : 
                        0.0073748543f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        0.037285086f : 
                        0.108477995f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[15])) ? 
                        -0.100382045f : 
                        0.043247353f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 193.0f ? 
                        0.119821385f : 
                        -0.017961454f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 31, static init size = 480B
  // {10010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-119, 12, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 0, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {34, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-127, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 0, 0, 0};
  // {01001110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {114, 3, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-58, 12, 0, 0};
  // {00100000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 12, 0, 0};
  // {11011101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-69, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {34, 0, 0, 0};
  // {10001010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {81, 15, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {12, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_22_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 168.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 72.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                     (data[0 /* age */] < 29.0f ? 
                        -0.026140036f : 
                        -0.08055863f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 8219.5f ? 
                        -0.0056979293f : 
                        0.21370105f)) : 
                 (data[11 /* duration */] < 108.5f ? 
                    -0.008352522f : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 13.0f ? 
                        -0.11689569f : 
                        -0.13867827f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 124.5f ? 
                 (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.07875619f : 
                        -0.022573581f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 83.5f ? 
                        -0.00946216f : 
                        0.3526352f)) : 
                 (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 66.5f ? 
                        0.017040916f : 
                        0.08389223f) : 
                    0.2957017f))) : 
         (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 521.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 403.5f ? 
                        -0.03469107f : 
                        0.12487183f) : 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
                        0.07703512f : 
                        -0.07918433f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 934.5f ? 
                        -0.034664366f : 
                        0.034815688f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[2])) ? 
                        0.011122889f : 
                        0.033911947f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 31.5f ? 
                     (data[0 /* age */] < 25.5f ? 
                        0.09688259f : 
                        0.005993561f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.03867675f : 
                        0.1320222f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        -0.089673586f : 
                        0.036599725f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 193.0f ? 
                        0.10594119f : 
                        0.0052239373f)))));
    return pred;
  } // constant pool size = 183B, number of visited nodes = 29, static init size = 390B
  // {10111001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-99, 6, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {113, 15, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-122, 12, 0, 0};
  // {01100111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-26, 15, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {5, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {32, 0, 0, 0};
  // {10001000 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {17, 15, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {14, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_23_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 341.5f ? 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 122.5f ? 
                        0.0025980321f : 
                        -0.078953736f) : 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.07025508f : 
                        -0.09014499f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 124.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.06025831f : 
                        0.15164597f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        0.027664028f : 
                        0.15913343f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.04824566f : 
                        0.17328198f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 403.5f ? 
                        -0.019469513f : 
                        0.083904676f)) : 
                 (data[11 /* duration */] < 152.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                        0.05393643f : 
                        -0.037752148f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.037949678f : 
                        0.16209348f)))) : 
         (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[2])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 914.5f ? 
                        -0.005701079f : 
                        0.018038603f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.025444467f : 
                        0.083851054f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.0778498f : 
                        0.027480716f) : 
                     (data[9 /* day */] < 7.5f ? 
                        0.013320022f : 
                        0.1086931f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                 (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[4])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.008037616f : 
                        0.082642116f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        0.04223286f : 
                        0.22361286f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[10])) ? 
                        -0.0038494433f : 
                        0.05617107f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[10])) ? 
                        0.018084632f : 
                        0.057024106f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 630B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 6, 0, 0};
  // {11011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {123, 15, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 4, 0, 0};
  // {00101010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {84, 1, 0, 0};
  // {00000011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-64, 8, 0, 0};
  // {01011011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-38, 6, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {64, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {5, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 0, 0, 0};
  // {11111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {63, 0, 0, 0};
  // {01010100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {42, 4, 0, 0};
  // {11011110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {123, 14, 0, 0};
  // {10001111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-15, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {2, 0, 0, 0};
  // {00000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-128, 8, 0, 0};
  // {10001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {81, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {1, 0, 0, 0};
  // {10111010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {93, 4, 0, 0};
  // {11000011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {-61, 13, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_24_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 168.5f ? 
         (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 70.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 112.5f ? 
                        -0.059784193f : 
                        -0.011209278f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.007172881f : 
                        0.1997671f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.012598016f : 
                        0.20210545f) : 
                     (data[11 /* duration */] < 90.5f ? 
                        -0.048274454f : 
                        0.10621174f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                 (data[11 /* duration */] < 104.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.119718574f : 
                        0.09633388f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.15468492f : 
                        -0.05320684f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 74.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 152.5f ? 
                        -0.08248051f : 
                        -0.099769026f) : 
                    -0.092337325f))) : 
         (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 614.5f ? 
                 (Double.isNaN(data[14]) || data[14 /* previous */] < 3.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 374.5f ? 
                        -0.019017262f : 
                        0.07321104f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.01918428f : 
                        0.15538514f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 146.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -0.037683997f : 
                        0.022579117f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.029403705f : 
                        0.19269642f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1208.5f ? 
                        -0.03186061f : 
                        0.044964146f) : 
                     (data[0 /* age */] < 41.5f ? 
                        0.20140187f : 
                        0.1260778f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 16.5f ? 
                        0.050445065f : 
                        -0.020191848f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        0.039249465f : 
                        0.08240196f)))));
    return pred;
  } // constant pool size = 192B, number of visited nodes = 30, static init size = 420B
  // {00000001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-128, 4, 0, 0};
  // {00010000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {8, 2, 0, 0};
  // {00100001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-124, 0, 0, 0};
  // {11011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {123, 3, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 2, 0, 0};
  // {00011001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-104, 0, 0, 0};
  // {10001100 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {49, 5, 0, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {98, 0, 0, 0};
  // {01101111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-10, 7, 0, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 8, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
  // {11010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-117, 14, 0, 0};
  // {11110011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-49, 9, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {64, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_25_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 365.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 63.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.059913542f : 
                        -0.031835753f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.03995549f : 
                        0.21209674f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.022731967f : 
                        0.23345299f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 721.5f ? 
                        -0.07118734f : 
                        0.033628445f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.02256422f : 
                        0.027991641f) : 
                     (data[11 /* duration */] < 178.5f ? 
                        0.029629957f : 
                        0.09684429f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.003090071f : 
                        0.08937077f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 296.5f ? 
                        0.055604517f : 
                        0.11899623f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 941.5f ? 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.00924152f : 
                        0.16452536f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.036150843f : 
                        0.035479058f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[15])) ? 
                        -0.019180119f : 
                        0.03523392f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 206.5f ? 
                        0.006202151f : 
                        0.06460381f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                 (data[0 /* age */] < 37.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.010416976f : 
                        0.07666893f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                        -0.0663854f : 
                        0.06246155f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 2113.5f ? 
                        0.021171393f : 
                        -0.14173089f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1447.5f ? 
                        0.046129942f : 
                        0.10878342f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 31, static init size = 480B
  // {11010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-117, 12, 0, 0};
  // {00000000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 3, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {16, 0, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-126, 0, 0, 0};
  // {00001110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {112, 11, 0, 0};
  // {10010000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {9, 4, 0, 0};
  // {01000100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {34, 4, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {12, 0, 0, 0};
  // {11011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {27, 2, 0, 0};
  // {00100000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 8, 0, 0};
  // {10110001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-115, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {7, 0, 0, 0};
  // {11100111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-25, 15, 0, 0};
  // {11110101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-81, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {00010111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-24, 14, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_26_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 168.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 72.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 62.0f ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                        -0.07647263f : 
                        -0.011882078f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 120.5f ? 
                        -0.11595775f : 
                        0.15627205f)) : 
                 (data[11 /* duration */] < 108.5f ? 
                    -0.0040470534f : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 13.0f ? 
                        -0.114110276f : 
                        -0.13315639f))) : 
             (data[11 /* duration */] < 88.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.08094512f : 
                        -0.030924933f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.1153961f : 
                        0.14937663f)) : 
                 (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.018868584f : 
                        -0.057711348f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.00929852f : 
                        0.34216362f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 502.5f ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[6])) ? 
                        -0.08478913f : 
                        -0.0736119f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 29.5f ? 
                        0.0044705425f : 
                        0.072162054f)) : 
                 (data[9 /* day */] < 14.5f ? 
                    0.30695337f : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.09981104f : 
                        0.09282678f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.038501292f : 
                        0.17905767f) : 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[7])) ? 
                        -0.024039723f : 
                        0.014105305f)) : 
                 (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.05958997f : 
                        0.059019685f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 465.5f ? 
                        0.1274207f : 
                        0.006408057f)))));
    return pred;
  } // constant pool size = 198B, number of visited nodes = 29, static init size = 480B
  // {10111001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-99, 6, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 0, 0, 0};
  // {01001000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {18, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11010011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-53, 14, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {11010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-117, 14, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {10111111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-3, 13, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 0, 0, 0};
  // {01011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {26, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {10, 0, 0, 0};
  // {11001001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-109, 12, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_27_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 384.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.049436845f : 
                        0.04990082f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.011167711f : 
                        0.03382712f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 31.5f ? 
                        0.0066871895f : 
                        0.04074778f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 15.5f ? 
                        0.06806072f : 
                        0.0014813242f))) : 
             (data[9 /* day */] < 5.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.10292867f : 
                        -0.01718924f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 53.0f ? 
                        0.022210114f : 
                        0.10415766f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 120.5f ? 
                        -0.0035411534f : 
                        0.053937286f) : 
                     (data[9 /* day */] < 8.5f ? 
                        0.010823644f : 
                        0.15043451f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 941.5f ? 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.009411781f : 
                        0.12941042f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.037175894f : 
                        -0.024666863f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        -0.017718807f : 
                        0.0352343f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.041089237f : 
                        0.04524371f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                 (data[0 /* age */] < 37.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        -0.010149263f : 
                        0.06945726f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                        -0.060508814f : 
                        0.055314694f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        -0.0029798378f : 
                        0.09989374f) : 
                     (data[5 /* balance */] < 296.5f ? 
                        0.025212752f : 
                        0.06579973f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {01010001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, 4, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {00100000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 8, 0, 0};
  // {00100000 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 11, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-126, 0, 0, 0};
  // {11001110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {115, 7, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {12, 0, 0, 0};
  // {11011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {27, 2, 0, 0};
  // {01100010 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {70, 9, 0, 0};
  // {10110011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-51, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {6, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {3, 0, 0, 0};
  // {11100111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-25, 15, 0, 0};
  // {11110101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-81, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {2, 0, 0, 0};
  // {01010111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-22, 14, 0, 0};
  // {00000110 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {96, 4, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_28_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.057042595f : 
                        -0.014175155f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 216.5f ? 
                        -0.028822249f : 
                        0.13249779f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (data[13 /* pdays */] < 96.0f ? 
                        0.05436249f : 
                        -0.02528092f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                        0.122125894f : 
                        0.009658306f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 152.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                        -0.040035684f : 
                        -0.09710148f) : 
                     (data[9 /* day */] < 7.5f ? 
                        -0.031713527f : 
                        0.03858295f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.09594689f : 
                        0.13353465f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.020343455f : 
                        0.09444377f)))) : 
         (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[2])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 27.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.040016964f : 
                        0.14364661f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 981.5f ? 
                        -0.11602291f : 
                        0.0130312145f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[15])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.0026066285f : 
                        0.018771835f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.019248378f : 
                        0.057072125f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.03946986f : 
                        0.015855161f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        -0.14553277f : 
                        0.064222336f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 47.5f ? 
                        0.030343752f : 
                        -0.0046928083f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.022339286f : 
                        0.17686845f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {10001100 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {49, 7, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {00000001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 14, 0, 0};
  // {00011001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-104, 4, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {3, 0, 0, 0};
  // {11010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-117, 14, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {64, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {5, 0, 0, 0};
  // {11110111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-17, 7, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {16, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {6, 0, 0, 0};
  // {00100000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 7, 0, 0};
  // {11001010 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {83, 14, 0, 0};
  // {01000011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-62, 10, 0, 0};
  // {10100111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-27, 1, 0, 0};
  // {11011101 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-69, 14, 0, 0};
  // {00010001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-120, 4, 0, 0};
  // {10100111 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-27, 10, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_29_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 376.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 993.5f ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 777.5f ? 
                        -0.045409072f : 
                        -0.04062046f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.014845076f : 
                        0.059322823f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 57.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        0.010018983f : 
                        0.086327486f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.19678946f : 
                        -0.034415178f))) : 
             (data[13 /* pdays */] < 427.5f ? 
                0.21777068f : 
                0.06077309f)) : 
         (data[11 /* duration */] < 134.5f ? 
             (data[11 /* duration */] < 78.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.107611105f : 
                        -0.060857996f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 393.5f ? 
                        -0.07940432f : 
                        -0.111819305f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.08021995f : 
                        -0.039707635f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 8.5f ? 
                        -0.04978943f : 
                        0.06414259f))) : 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[6])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 733.0f ? 
                        -0.019234044f : 
                        0.016077453f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 47.5f ? 
                        0.024918426f : 
                        0.051866997f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                        0.031424813f : 
                        -0.008129115f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        -0.04978717f : 
                        0.055078436f)))));
    return pred;
  } // constant pool size = 157B, number of visited nodes = 25, static init size = 330B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-127, 0, 0, 0};
  // {01100110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {102, 1, 0, 0};
  // {10111011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-35, 9, 0, 0};
  // {01111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {126, 3, 0, 0};
  // {01101001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-106, 8, 0, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-120, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-58, 12, 0, 0};
  // {10010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {9, 1, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_30_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 691.5f ? 
                        -0.056052342f : 
                        0.015097191f) : 
                     (data[9 /* day */] < 15.5f ? 
                        0.3933025f : 
                        -0.019953458f)) : 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 384.5f ? 
                        -0.0240651f : 
                        0.022182342f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.0062348964f : 
                        0.05268581f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 5.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 622.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.03546604f : 
                        0.033081904f) : 
                     (data[5 /* balance */] < 813.5f ? 
                        0.0032985755f : 
                        0.09605182f)) : 
                 (data[11 /* duration */] < 120.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.022793073f : 
                        0.06910229f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                        0.011018101f : 
                        0.09942514f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 941.5f ? 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 897.5f ? 
                     (data[0 /* age */] < 25.5f ? 
                        0.026834222f : 
                        -0.02676794f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.09948275f : 
                        0.04152514f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 220.5f ? 
                     (data[9 /* day */] < 16.5f ? 
                        0.0023352117f : 
                        -0.049703367f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.0063018072f : 
                        0.0373782f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                 (data[0 /* age */] < 37.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.01193064f : 
                        0.060641553f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.055836257f : 
                        0.049856454f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 2113.5f ? 
                        0.013691089f : 
                        -0.13209288f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1447.5f ? 
                        0.034118358f : 
                        0.09245163f)))));
    return pred;
  } // constant pool size = 201B, number of visited nodes = 31, static init size = 450B
  // {01010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {65, 1, 0, 0};
  // {01101111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-10, 0, 0, 0};
  // {00111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-4, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {11, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {12, 0, 0, 0};
  // {01010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {74, 0, 0, 0};
  // {10110011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-51, 13, 0, 0};
  // {11100111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-25, 15, 0, 0};
  // {11110101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-81, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
  // {00010111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-24, 14, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_31_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 288.5f ? 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 120.5f ? 
                        0.001310999f : 
                        -0.101312794f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        -0.08020888f : 
                        -0.044962402f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 124.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.05122231f : 
                        0.1551481f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.029879592f : 
                        0.15045576f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.05572365f : 
                        -0.013811987f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        0.026884431f : 
                        0.18620868f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 55.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 156.5f ? 
                        0.13812748f : 
                        0.16209511f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 1499.5f ? 
                        -0.01671713f : 
                        0.09091939f)))) : 
         (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 1446.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 378.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.019426353f : 
                        6.6434336E-4f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.032115348f : 
                        0.15399328f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        0.006624528f : 
                        0.07805911f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 12039.5f ? 
                        0.0886125f : 
                        -0.16002549f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1163.5f ? 
                        -0.06345911f : 
                        0.10941464f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 944.5f ? 
                        0.024734022f : 
                        -0.045612432f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.015620574f : 
                        0.046777327f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.062136747f : 
                        0.21710812f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 31, static init size = 480B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 6, 0, 0};
  // {11011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {123, 15, 0, 0};
  // {10000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 4, 0, 0};
  // {00101010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {84, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {64, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {5, 0, 0, 0};
  // {11110011 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-49, 5, 0, 0};
  // {11111101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-65, 3, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {28, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 0, 0, 0};
  // {11001111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-13, 11, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {8, 0, 0, 0};
  // {00000110 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {96, 5, 0, 0};
  // {10000010 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {65, 10, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_32_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 376.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1120.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.04426497f : 
                        0.044288345f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 57.0f ? 
                        0.05040721f : 
                        -0.13588904f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1018.5f ? 
                        -0.021109968f : 
                        0.041576765f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.0070758346f : 
                        0.12481184f))) : 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                0.043418713f : 
                0.19307469f)) : 
         (data[11 /* duration */] < 124.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 78.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.105980136f : 
                        -0.006247031f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 393.5f ? 
                        -0.076059245f : 
                        -0.10966867f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.053857807f : 
                        -0.027694292f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        -0.10405833f : 
                        0.048673734f))) : 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[6])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 724.5f ? 
                        -0.01987146f : 
                        0.012223763f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 10.5f ? 
                        0.0052298475f : 
                        0.05074954f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                        0.026111431f : 
                        -0.0066943928f) : 
                     (data[9 /* day */] < 8.5f ? 
                        0.012404835f : 
                        0.058128938f)))));
    return pred;
  } // constant pool size = 157B, number of visited nodes = 25, static init size = 330B
  // {10100011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-59, 9, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {01111010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {94, 15, 0, 0};
  // {01100101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-90, 1, 0, 0};
  // {01111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {126, 3, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {16, 0, 0, 0};
  // {00000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-128, 8, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01110011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-50, 12, 0, 0};
  // {10010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {9, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_33_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                        -0.03233936f : 
                        0.24500825f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 15.5f ? 
                        0.31062263f : 
                        -0.020760683f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 2036.5f ? 
                     (data[11 /* duration */] < 128.5f ? 
                        -0.028360434f : 
                        0.01581223f) : 
                    -0.15863715f)) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 5.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 622.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 1523.5f ? 
                        -0.025909407f : 
                        0.04077041f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.0038593586f : 
                        0.085648045f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 120.5f ? 
                        -0.0012653127f : 
                        0.057020262f) : 
                     (data[9 /* day */] < 8.5f ? 
                        0.002930033f : 
                        0.11114027f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 605.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 4.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 236.5f ? 
                        0.016289504f : 
                        0.11158986f) : 
                     (data[0 /* age */] < 25.5f ? 
                        0.044806022f : 
                        -0.03639393f)) : 
                 (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 463.5f ? 
                        -0.053806916f : 
                        0.04548945f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.0065346146f : 
                        0.082438074f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1194.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.05231663f : 
                        0.027831152f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 695.0f ? 
                        -0.0051980964f : 
                        0.11908566f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                        -0.022193218f : 
                        0.02637175f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        0.023862576f : 
                        -0.057987012f)))));
    return pred;
  } // constant pool size = 182B, number of visited nodes = 30, static init size = 360B
  // {01010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {10001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {17, 2, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10010110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {105, 6, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 0, 0, 0};
  // {10110010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {77, 8, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {00100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {68, 0, 0, 0};
  // {01000111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-30, 15, 0, 0};
  // {00010111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-24, 9, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_34_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (Double.isNaN(data[5]) || data[5 /* balance */] < 801.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.031843882f : 
                        0.028044602f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.008662205f : 
                        0.059306987f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 376.5f ? 
                        -0.01726137f : 
                        0.15745205f) : 
                     (data[9 /* day */] < 7.5f ? 
                        -0.014361405f : 
                        0.1244454f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 5.5f ? 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.008207193f : 
                        0.06509615f) : 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 5.5f ? 
                        -0.008330579f : 
                        0.055155635f)) : 
                 (data[9 /* day */] < 7.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 345.0f ? 
                        -0.005429337f : 
                        -0.12682396f) : 
                     (data[9 /* day */] < 20.5f ? 
                        0.13285202f : 
                        0.006500577f)))) : 
         (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 25.5f ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        -0.03852984f : 
                        0.084906556f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.19241f : 
                        -0.0745507f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 25.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.038680106f : 
                        0.0029311655f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.015834507f : 
                        0.122888535f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (data[0 /* age */] < 29.5f ? 
                     (data[9 /* day */] < 4.0f ? 
                        -0.13643144f : 
                        0.04516652f) : 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 1.5f ? 
                        0.013643797f : 
                        -0.032777533f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[4])) ? 
                        0.013766546f : 
                        0.10964671f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                        0.020925371f : 
                        0.06062714f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-128, 0, 0, 0};
  // {11100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-121, 12, 0, 0};
  // {01110100 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {46, 6, 0, 0};
  // {00011000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {24, 8, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {5, 0, 0, 0};
  // {11110110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {111, 7, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {12, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {16, 0, 0, 0};
  // {01111111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-2, 7, 0, 0};
  // {10000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {65, 0, 0, 0};
  // {01000111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-30, 13, 0, 0};
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-63, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {1, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_35_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 691.5f ? 
                        -0.05316086f : 
                        0.013077396f) : 
                     (data[11 /* duration */] < 76.5f ? 
                        0.0033946452f : 
                        0.14603035f)) : 
                 (data[11 /* duration */] < 115.5f ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                        -0.036573652f : 
                        0.044604484f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.0041252584f : 
                        0.022598183f))) : 
             (data[11 /* duration */] < 172.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 113.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 99.5f ? 
                        0.014084476f : 
                        -0.09419914f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        0.05906673f : 
                        0.4515097f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 10383.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        0.043743912f : 
                        0.1435304f) : 
                    0.22638267f))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1229.5f ? 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.023246922f : 
                        0.020805411f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.0033134178f : 
                        0.049956612f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[15])) ? 
                        -0.013522361f : 
                        0.040941566f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                        0.0214237f : 
                        0.059803482f))) : 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2791.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.08743692f : 
                        0.0033008517f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 46.5f ? 
                        0.03801575f : 
                        0.14712292f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1975.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.031477675f : 
                        0.08098892f) : 
                    -0.061600734f))));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 29, static init size = 450B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {10001001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-111, 6, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 0, 0, 0};
  // {11010011 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-53, 11, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {18, 0, 0, 0};
  // {10100001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-123, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {10001011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-47, 12, 0, 0};
  // {10110011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-51, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 0, 0, 0};
  // {10000011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-63, 15, 0, 0};
  // {10110111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-19, 1, 0, 0};
  // {11111100 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {63, 7, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_36_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 922.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 348.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 217.5f ? 
                        -0.06340744f : 
                        -0.044572905f) : 
                    0.18830399f) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 404.0f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 373.5f ? 
                        -0.04084845f : 
                        0.01144386f) : 
                    -0.13581625f)) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1079.5f ? 
                        -0.053913634f : 
                        -0.17363244f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                        -0.07746875f : 
                        0.07399115f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 54.5f ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
                        0.0026883525f : 
                        0.0810366f) : 
                    0.18046045f))) : 
         (data[11 /* duration */] < 124.5f ? 
             (data[11 /* duration */] < 77.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 67.5f ? 
                        -0.08414225f : 
                        -0.108810924f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 393.5f ? 
                        -0.07893336f : 
                        -0.112012595f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.0889778f : 
                        -0.06334061f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.05751639f : 
                        0.030822914f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 424.5f ? 
                        -0.086266294f : 
                        0.006562153f) : 
                     (data[9 /* day */] < 14.5f ? 
                        0.18598339f : 
                        0.044125695f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.007518353f : 
                        0.015637476f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[15])) ? 
                        -0.0082625635f : 
                        0.0717141f)))));
    return pred;
  } // constant pool size = 184B, number of visited nodes = 28, static init size = 420B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10100011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-59, 13, 0, 0};
  // {11001111 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-13, 5, 0, 0};
  // {01001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {50, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {11111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {127, 3, 0, 0};
  // {10010011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-55, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {10010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-119, 14, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 0, 0, 0};
  // {10101101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-75, 7, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {10, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_37_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 376.5f ? 
             (data[0 /* age */] < 29.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 358.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                        -0.03450437f : 
                        0.06365697f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.024915557f : 
                        0.23301253f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.0372436f : 
                        -0.013725516f) : 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                        -0.108587354f : 
                        0.037178263f))) : 
             (data[13 /* pdays */] < 427.5f ? 
                0.1828174f : 
                0.045343228f)) : 
         (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 441.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.036451288f : 
                        0.020730445f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.06620174f : 
                        0.25985262f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 23.0f ? 
                        -0.042814028f : 
                        0.038643815f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        -0.0030152649f : 
                        0.02383615f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.0060920785f : 
                        0.18435374f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.0167024f : 
                        0.038439773f)) : 
                 (data[9 /* day */] < 7.5f ? 
                     (data[9 /* day */] < 1.5f ? 
                        0.13899563f : 
                        -0.005266503f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.013569171f : 
                        0.05680415f)))));
    return pred;
  } // constant pool size = 172B, number of visited nodes = 25, static init size = 420B
  // {10100001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-123, 4, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-64, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {10100011 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-59, 5, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01110000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {14, 8, 0, 0};
  // {01111011 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-34, 11, 0, 0};
  // {01110111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-18, 15, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {10010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {9, 1, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {16, 2, 0, 0};
  // {00000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 4, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_38_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 129.5f ? 
         (data[11 /* duration */] < 77.5f ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 419.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 377.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                        -0.0818922f : 
                        -0.078723155f) : 
                    0.23215194f) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                    -0.112623654f : 
                    -0.1056953f)) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 386.0f ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.050582748f : 
                        -0.063188374f) : 
                    0.14717059f) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                        -0.06781102f : 
                        0.0065271566f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 9306.5f ? 
                        0.053637937f : 
                        0.24482225f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1551.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 455.5f ? 
                        -0.019539904f : 
                        -0.11416194f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1988.5f ? 
                        0.07694414f : 
                        -0.015528423f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1364.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.005444156f : 
                        0.061131433f) : 
                    -0.13203906f)) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.02521961f : 
                        0.11286833f) : 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                        -0.020331966f : 
                        0.008822242f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        -0.04223775f : 
                        0.06956201f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 15.5f ? 
                        0.10407316f : 
                        0.017925972f)))));
    return pred;
  } // constant pool size = 171B, number of visited nodes = 26, static init size = 390B
  // {11111110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {127, 7, 0, 0};
  // {10111010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {93, 15, 0, 0};
  // {10010011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-55, 12, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 2, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {11000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 6, 0, 0};
  // {11101011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-41, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {64, 0, 0, 0};
  // {01011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {26, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {11001011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-45, 2, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_39_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1806.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 339.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.020638902f : 
                        0.016033784f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        2.6171646E-4f : 
                        0.022581547f)) : 
                 (data[9 /* day */] < 11.0f ? 
                    -0.19747189f : 
                     (data[5 /* balance */] < 1232.5f ? 
                        0.09348797f : 
                        -0.08977483f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 119.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 181.5f ? 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 1.5f ? 
                        -0.0320947f : 
                        0.0605309f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 9956.5f ? 
                        0.04043063f : 
                        0.22765897f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 4841.0f ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                        0.044942766f : 
                        0.1886693f) : 
                    -0.12966557f))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 605.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 4.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 236.5f ? 
                        0.015116889f : 
                        0.09575777f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        -0.032080043f : 
                        0.024681382f)) : 
                 (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 416.5f ? 
                        -0.05177505f : 
                        0.03830434f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.004721018f : 
                        0.0661343f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 192.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -0.041674f : 
                        0.013560155f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.12942354f : 
                        -0.0073440745f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                        -0.020289613f : 
                        0.02368964f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        0.020497665f : 
                        -0.057668466f)))));
    return pred;
  } // constant pool size = 173B, number of visited nodes = 29, static init size = 330B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10001000 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {17, 11, 0, 0};
  // {10010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 1, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {3, 0, 0, 0};
  // {10110010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {77, 8, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {68, 0, 0, 0};
  // {01000111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-30, 15, 0, 0};
  // {11010111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-21, 11, 0, 0};
  // {00101111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-12, 12, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_40_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[14]) || data[14 /* previous */] < 2.0f ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 1376.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 378.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 111.5f ? 
                        -0.01798909f : 
                        -0.048004583f) : 
                     (data[11 /* duration */] < 181.5f ? 
                        0.003838235f : 
                        0.15054621f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 452.5f ? 
                        -4.559792E-4f : 
                        -0.1706685f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.0053224857f : 
                        0.09925661f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 538.5f ? 
                        -0.0036200923f : 
                        -0.029967804f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                        0.03959531f : 
                        0.078445345f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 25.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.011888996f : 
                        0.07548966f) : 
                     (data[11 /* duration */] < 145.5f ? 
                        0.06861829f : 
                        0.189364f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 393.5f ? 
             (data[0 /* age */] < 29.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.047975723f : 
                        0.02338369f) : 
                     (data[11 /* duration */] < 154.5f ? 
                        0.02499617f : 
                        0.15402938f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 370.5f ? 
                        -0.020811755f : 
                        0.07808406f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                        -0.042441305f : 
                        0.04979751f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[7 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                        -0.040339246f : 
                        0.04168834f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.20141803f : 
                        0.032126207f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 47.5f ? 
                     (data[9 /* day */] < 14.0f ? 
                        0.04756487f : 
                        0.018071214f) : 
                     (data[9 /* day */] < 11.5f ? 
                        -0.053754423f : 
                        0.0024612816f)))));
    return pred;
  } // constant pool size = 196B, number of visited nodes = 31, static init size = 420B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {28, 0, 0, 0};
  // {00111101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-68, 0, 0, 0};
  // {01100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {38, 0, 0, 0};
  // {10000001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-127, 13, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11011000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {27, 7, 0, 0};
  // {01000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-127, 12, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {12, 0, 0, 0};
  // {01101111 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-10, 10, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {7, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_41_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 283.5f ? 
         (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.041276626f : 
                        0.027793858f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.071783334f : 
                        0.33130422f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 2.5f ? 
                        -0.025239652f : 
                        -0.08809317f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.005427512f : 
                        0.040922083f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (data[11 /* duration */] < 105.5f ? 
                        -0.05520884f : 
                        -0.13668886f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 146.5f ? 
                        -0.08747122f : 
                        0.025081046f)) : 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.007375753f : 
                        0.14489652f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.07784518f : 
                        -0.03233469f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 84.0f ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 13241.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 678.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 2610.0f ? 
                        0.0036062482f : 
                        0.016691998f) : 
                    0.12586273f) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                    -0.16893418f : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 26612.0f ? 
                        -0.056374535f : 
                        0.09107791f))) : 
            0.12500215f));
    return pred;
  } // constant pool size = 140B, number of visited nodes = 22, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-122, 12, 0, 0};
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {3, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-63, 1, 0, 0};
  // {11011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {123, 3, 0, 0};
  // {10001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-47, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {11, 0, 0, 0};
  // {10111011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-35, 1, 0, 0};
  // {11000111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-29, 11, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_42_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 797.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 754.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 719.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.056454707f : 
                        -0.021392599f) : 
                     (data[9 /* day */] < 13.5f ? 
                        0.19127035f : 
                        -0.015583621f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (data[11 /* duration */] < 773.5f ? 
                        -0.15350054f : 
                        -0.11024204f) : 
                    0.04559383f)) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 54.5f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.081084594f : 
                        0.0127393445f) : 
                     (data[0 /* age */] < 27.5f ? 
                        0.16192909f : 
                        0.028047612f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                    0.09067048f : 
                    0.20185745f))) : 
         (data[11 /* duration */] < 124.5f ? 
             (data[11 /* duration */] < 62.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[6])) ? 
                        -0.10498205f : 
                        -0.08797921f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 377.5f ? 
                        -0.08769609f : 
                        -0.1109146f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 2.5f ? 
                        -0.051188476f : 
                        -0.07058768f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                        0.016915752f : 
                        -0.09362393f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 424.5f ? 
                        -0.082641676f : 
                        0.006047269f) : 
                     (data[9 /* day */] < 14.5f ? 
                        0.16008325f : 
                        0.041040752f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.0067682876f : 
                        0.0122637935f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.007657515f : 
                        0.0807011f)))));
    return pred;
  } // constant pool size = 184B, number of visited nodes = 28, static init size = 420B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {11100011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-57, 15, 0, 0};
  // {00100101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-92, 4, 0, 0};
  // {11001111 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-13, 5, 0, 0};
  // {01001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {50, 0, 0, 0};
  // {01101011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-42, 15, 0, 0};
  // {01001110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {114, 3, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10010011 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-55, 10, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
  // {10010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-119, 14, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 0, 0, 0};
  // {10101101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-75, 7, 0, 0};
  // {11000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-125, 2, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_43_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 376.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 266.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.032367073f : 
                        0.02815693f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.055140216f : 
                        0.28270447f)) : 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1018.5f ? 
                        -0.012877349f : 
                        0.036312744f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.024085041f : 
                        0.11209201f))) : 
             (data[13 /* pdays */] < 427.5f ? 
                0.15825099f : 
                0.037001677f)) : 
         (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[6])) ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 68.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 384.5f ? 
                        -0.019481223f : 
                        -0.03175334f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 384.5f ? 
                        -0.022598928f : 
                        0.012664413f)) : 
                0.14998329f) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        0.0031908483f : 
                        0.15445164f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.015033596f : 
                        0.034028735f)) : 
                 (data[9 /* day */] < 7.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1324.0f ? 
                        -0.0048702783f : 
                        0.13727938f) : 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.05189593f : 
                        0.043832187f)))));
    return pred;
  } // constant pool size = 140B, number of visited nodes = 22, static init size = 300B
  // {10100011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-59, 9, 0, 0};
  // {00001000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {16, 7, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {01111010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {94, 15, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01110110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {110, 15, 0, 0};
  // {10010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {9, 1, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {16, 2, 0, 0};
  // {00000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 4, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_44_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[5]) || data[5 /* balance */] < 13063.5f ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 1164.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 374.5f ? 
                        -0.017348142f : 
                        0.06311515f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.012788645f : 
                        0.059193928f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 452.5f ? 
                        0.0059469994f : 
                        -0.07681343f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 10.5f ? 
                        0.018652545f : 
                        0.08015182f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                    -0.18959768f : 
                    -0.11325705f) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 127.0f ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[15])) ? 
                        -0.046034396f : 
                        0.29530573f) : 
                     (data[11 /* duration */] < 255.5f ? 
                        -0.12578891f : 
                        -0.1860966f)))) : 
         (data[0 /* age */] < 30.0f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 7.5f ? 
                        -0.017992025f : 
                        0.022027314f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.023949917f : 
                        0.105326116f)) : 
                 (data[11 /* duration */] < 207.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 101.5f ? 
                        0.25521663f : 
                        -0.07311963f) : 
                     (data[0 /* age */] < 24.5f ? 
                        0.08053847f : 
                        0.31553447f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 474.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        -0.009913718f : 
                        0.043206908f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.0014581655f : 
                        0.10577738f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                        -0.021501217f : 
                        0.011754549f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.012893696f : 
                        0.05114582f)))));
    return pred;
  } // constant pool size = 188B, number of visited nodes = 29, static init size = 420B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {01111101 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-66, 8, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {12, 0, 0, 0};
  // {11101111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-9, 11, 0, 0};
  // {01011001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-102, 15, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 0, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 2, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {01111000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {30, 4, 0, 0};
  // {00000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-128, 8, 0, 0};
  // {11100001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-121, 4, 0, 0};
  // {01000110 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {98, 5, 0, 0};
  // {10000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {65, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_45_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1200.5f ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 370.5f ? 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.0055985977f : 
                        0.12375129f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.04027201f : 
                        -0.008308394f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.02552665f : 
                        -0.13094547f) : 
                     (data[0 /* age */] < 41.5f ? 
                        0.28444162f : 
                        0.14637935f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.21740226f : 
                        -0.01669464f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 45.5f ? 
                        -0.011323604f : 
                        0.07047585f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (data[9 /* day */] < 14.5f ? 
                        0.07161055f : 
                        -0.0023060362f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.06254505f : 
                        0.15790546f)))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1710.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1310.5f ? 
                        -0.002310606f : 
                        0.035997212f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        0.010771905f : 
                        0.11386142f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                    -0.1751749f : 
                    -0.020951467f)) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 187.5f ? 
                 (data[9 /* day */] < 7.5f ? 
                     (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[7])) ? 
                        -0.124940954f : 
                        0.021914236f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        0.029908227f : 
                        0.10490239f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 342.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.062447473f : 
                        0.043451257f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 694.0f ? 
                        0.1921978f : 
                        -0.07291518f)))));
    return pred;
  } // constant pool size = 198B, number of visited nodes = 29, static init size = 480B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 2, 0, 0};
  // {11111101 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-65, 6, 0, 0};
  // {00100010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {68, 4, 0, 0};
  // {10010101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-87, 2, 0, 0};
  // {11001010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {83, 6, 0, 0};
  // {10111111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-3, 11, 0, 0};
  // {00101001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-108, 3, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 2, 0, 0};
  // {10010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-119, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {34, 0, 0, 0};
  // {00101010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {84, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {8, 0, 0, 0};
  // {10000000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 3, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_46_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 288.5f ? 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 178.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.09376589f : 
                        0.06403553f) : 
                     (data[11 /* duration */] < 222.5f ? 
                        -0.17816152f : 
                        -0.032457042f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 80.5f ? 
                        -0.049885247f : 
                        0.04382952f) : 
                    -0.12342109f)) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (data[9 /* day */] < 5.5f ? 
                        0.026717152f : 
                        -0.020220151f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.010600385f : 
                        0.12498443f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 17.5f ? 
                        0.026053753f : 
                        -0.06164764f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.010179087f : 
                        0.05391955f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 84.0f ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 5922.5f ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2437.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.013913244f : 
                        0.005880022f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                        0.018731195f : 
                        0.09037191f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.06666026f : 
                        0.15641227f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.010884119f : 
                        0.13101776f))) : 
            0.11503423f));
    return pred;
  } // constant pool size = 149B, number of visited nodes = 23, static init size = 330B
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {14, 0, 0, 0};
  // {11011110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {123, 11, 0, 0};
  // {10100101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-91, 2, 0, 0};
  // {00010010 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {72, 14, 0, 0};
  // {00101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {52, 0, 0, 0};
  // {00011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-72, 7, 0, 0};
  // {11110111 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-17, 5, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {13, 0, 0, 0};
  // {00110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {76, 0, 0, 0};
  // {10001000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {17, 8, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_47_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 307.5f ? 
                 (data[9 /* day */] < 11.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1694.5f ? 
                        -0.008190169f : 
                        -0.17086813f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.01729649f : 
                        0.021945784f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.08635251f : 
                        -0.035836577f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.037012894f : 
                        0.18601403f))) : 
             (data[9 /* day */] < 16.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 5.5f ? 
                        -0.0099999355f : 
                        0.043308966f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        0.059060104f : 
                        0.2980687f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 24.5f ? 
                        -0.033904042f : 
                        0.17059661f) : 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[6])) ? 
                        0.050356433f : 
                        0.19162567f)))) : 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1517.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.052938968f : 
                        -0.010324309f) : 
                     (data[9 /* day */] < 5.5f ? 
                        0.018395348f : 
                        -0.012910624f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                    -0.08861447f : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 2035.5f ? 
                        0.08768812f : 
                        -0.014611803f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1614.5f ? 
                        -0.0107103875f : 
                        -0.08792862f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        0.054102696f : 
                        0.275963f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.020010835f : 
                        0.064918876f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 230.5f ? 
                        0.01978133f : 
                        0.039048076f)))));
    return pred;
  } // constant pool size = 212B, number of visited nodes = 30, static init size = 540B
  // {01010000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {10, 2, 0, 0};
  // {11010010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {75, 15, 0, 0};
  // {00101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {52, 0, 0, 0};
  // {10000000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 9, 0, 0};
  // {10100001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-123, 1, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 2, 0, 0};
  // {11111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-33, 0, 0, 0};
  // {01111111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-2, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 0, 0, 0};
  // {11100110 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {103, 9, 0, 0};
  // {10111101 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-67, 10, 0, 0};
  // {10011111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-7, 11, 0, 0};
  // {10110011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-51, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {32, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {1, 0, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-120, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_48_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 129.5f ? 
         (data[0 /* age */] < 20.0f ? 
             (data[9 /* day */] < 10.5f ? 
                0.039055716f : 
                -0.13790989f) : 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 382.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.034286633f : 
                        -0.052906256f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.10846181f : 
                        0.14140424f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[15])) ? 
                        -0.041264538f : 
                        0.042138312f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 1163.5f ? 
                        0.04807855f : 
                        -0.02387f)))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 453.5f ? 
                 (Double.isNaN(data[14]) || data[14 /* previous */] < 5.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.01402016f : 
                        0.019748762f) : 
                     (data[9 /* day */] < 5.5f ? 
                        -0.17881124f : 
                        -0.032770388f)) : 
                -0.115788825f) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.0030335346f : 
                        0.15791436f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.011364616f : 
                        0.04839779f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.053207576f : 
                        0.0023130965f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.008045585f : 
                        0.15073577f)))));
    return pred;
  } // constant pool size = 145B, number of visited nodes = 22, static init size = 330B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {01011110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {122, 11, 0, 0};
  // {01010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-118, 0, 0, 0};
  // {10100001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-123, 4, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {11010000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {11, 6, 0, 0};
  // {00000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {64, 1, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {16, 2, 0, 0};
  // {00010000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 4, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {0, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_49_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 552.5f ? 
         (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 440.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 406.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 419.0f ? 
                        -0.04222113f : 
                        -0.11431745f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        0.0045537376f : 
                        0.16280262f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.13089989f : 
                        -0.053864542f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.01361784f : 
                        0.26389948f))) : 
             (data[0 /* age */] < 29.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 535.5f ? 
                        0.010330901f : 
                        0.08874479f) : 
                     (data[11 /* duration */] < 155.5f ? 
                        0.018456893f : 
                        0.09976878f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 920.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        -0.015530794f : 
                        0.020181475f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.0042726663f : 
                        0.039873015f)))) : 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        -0.20643027f : 
                        -0.11092418f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[15])) ? 
                        -0.13947223f : 
                        -0.013563625f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[6])) ? 
                        -0.123720266f : 
                        0.030363057f) : 
                     (data[0 /* age */] < 45.5f ? 
                        0.1133759f : 
                        0.036595304f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 894.5f ? 
                        -0.03603597f : 
                        0.0029241017f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                        -0.022101745f : 
                        0.039443083f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        0.0075628217f : 
                        -0.050246682f) : 
                     (data[0 /* age */] < 29.5f ? 
                        -0.008520003f : 
                        0.030433362f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {5, 0, 0, 0};
  // {01000000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 7, 0, 0};
  // {11010001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-117, 2, 0, 0};
  // {00100110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {100, 8, 0, 0};
  // {01000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 2, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {24, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {7, 0, 0, 0};
  // {01111101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-66, 4, 0, 0};
  // {01101111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-10, 9, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 0, 0, 0};
  // {10111101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-67, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
  // {01000111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-30, 9, 0, 0};
  // {10000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 6, 0, 0};
  // {11100000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {7, 5, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_50_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
         (Double.isNaN(data[14]) || data[14 /* previous */] < 6.0f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1537.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1489.5f ? 
                        -0.018744197f : 
                        -0.10647583f) : 
                     (data[9 /* day */] < 5.5f ? 
                        -0.045474127f : 
                        0.055993207f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1210.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 842.5f ? 
                        0.020445032f : 
                        0.14110886f) : 
                    -0.12766866f)) : 
             (data[13 /* pdays */] < 127.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.17373896f : 
                        -0.14061332f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.15116264f : 
                        0.14170773f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2582.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.17708598f : 
                        -0.057430442f) : 
                    0.09096422f))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 557.5f ? 
                 (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 411.5f ? 
                        -0.033831224f : 
                        -0.10412829f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 370.5f ? 
                        0.002563029f : 
                        0.042437527f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                        -0.0061286166f : 
                        0.14858352f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.002936744f : 
                        0.029439257f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 269.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 235.5f ? 
                        -0.04449851f : 
                        0.13859253f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 23.5f ? 
                        -0.08709551f : 
                        0.07648587f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 23.5f ? 
                     (data[0 /* age */] < 24.5f ? 
                        -0.10325016f : 
                        0.09422705f) : 
                     (Double.isNaN(data[14]) || data[14 /* previous */] < 6.5f ? 
                        -0.010366791f : 
                        0.12827139f)))));
    return pred;
  } // constant pool size = 178B, number of visited nodes = 29, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01100000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 6, 0, 0};
  // {00001010 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {80, 10, 0, 0};
  // {11101010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {87, 15, 0, 0};
  // {11001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {51, 0, 0, 0};
  // {11111001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-97, 3, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {64, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-94, 9, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {11100011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-57, 1, 0, 0};
  // {11001011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-45, 2, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_51_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 341.5f ? 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 177.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.08787425f : 
                        0.054604787f) : 
                     (data[11 /* duration */] < 228.5f ? 
                        -0.1501168f : 
                        -0.016768055f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 10912.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 447.0f ? 
                        -0.045149766f : 
                        -0.08870411f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        0.001667668f : 
                        0.4816172f))) : 
             (data[5 /* balance */] < 155.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.035348542f : 
                        0.04042788f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.03744181f : 
                        0.08342026f)) : 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.015693445f : 
                        0.08496843f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 179.5f ? 
                        0.0054327142f : 
                        0.023404313f)))) : 
         (Double.isNaN(data[9]) || data[9 /* day */] < 24.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 20.5f ? 
                        -0.027480453f : 
                        0.057139963f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.030725276f : 
                        0.005934316f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                    0.035055663f : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[2])) ? 
                        0.21464844f : 
                        0.3173574f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 985.5f ? 
                        -0.057637468f : 
                        0.032707665f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[15])) ? 
                        0.018338647f : 
                        0.12531221f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                     (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[6])) ? 
                        0.012113151f : 
                        0.13794768f) : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[2])) ? 
                        0.103474274f : 
                        0.19269572f)))));
    return pred;
  } // constant pool size = 212B, number of visited nodes = 30, static init size = 540B
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {14, 0, 0, 0};
  // {11011110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {123, 11, 0, 0};
  // {10100101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-91, 2, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {5, 0, 0, 0};
  // {00010000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {8, 1, 0, 0};
  // {11011011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-37, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {16, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-2, 3, 0, 0};
  // {11101111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-9, 6, 0, 0};
  // {10111011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-35, 12, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 0, 0, 0};
  // {10000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 6, 0, 0};
  // {11010110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {107, 7, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {01101011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-42, 9, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {2, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_52_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1801.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 11.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.058569036f : 
                        -0.010476324f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 306.5f ? 
                        -0.0047962014f : 
                        0.018878652f)) : 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.012803167f : 
                        0.15108457f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.023935428f : 
                        0.067683555f))) : 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                    -0.19382635f : 
                    -0.06663532f) : 
                0.033727348f)) : 
         (data[0 /* age */] < 30.0f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1486.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.048087455f : 
                        0.0041221683f) : 
                    0.10571173f) : 
                 (Double.isNaN(data[12]) || data[12 /* campaign */] < 5.5f ? 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
                        0.05051661f : 
                        0.20948897f) : 
                    -0.13803947f)) : 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 712.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.024601568f : 
                        0.014833751f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.018575177f : 
                        0.07333839f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 727.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.0071689417f : 
                        0.027560359f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.008068016f : 
                        0.039848927f)))));
    return pred;
  } // constant pool size = 163B, number of visited nodes = 24, static init size = 390B
  // {01010001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, 2, 0, 0};
  // {11111111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-1, 11, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 2, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {10, 0, 0, 0};
  // {10011010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {89, 4, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 2, 0, 0};
  // {00111110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {124, 11, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {00100011 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-60, 12, 0, 0};
  // {11111000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {31, 12, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {28, 0, 0, 0};
  // {01000101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-94, 11, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_53_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 167.5f ? 
                        -0.082451925f : 
                        -0.14896218f) : 
                     (data[9 /* day */] < 24.0f ? 
                        0.21985227f : 
                        0.004769123f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 68.5f ? 
                     (data[0 /* age */] < 23.5f ? 
                        0.064369336f : 
                        -0.05081042f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.034420222f : 
                        0.07997302f))) : 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.04715634f : 
                        -0.051499303f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[15])) ? 
                        -0.093184866f : 
                        0.040358696f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.0011573045f : 
                        0.02502973f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[15])) ? 
                        -0.041410863f : 
                        0.06742751f)))) : 
         (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 6179.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.03306327f : 
                        0.013790273f) : 
                     (data[9 /* day */] < 11.5f ? 
                        -4.892197E-4f : 
                        0.01252971f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[15])) ? 
                        -0.09187566f : 
                        0.024107533f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.00734578f : 
                        0.11689659f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 45.5f ? 
                        -0.022179117f : 
                        -0.14836125f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                        0.09452939f : 
                        0.009534496f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                    0.044849858f : 
                    0.3217807f))));
    return pred;
  } // constant pool size = 208B, number of visited nodes = 29, static init size = 540B
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {14, 0, 0, 0};
  // {11111111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-1, 11, 0, 0};
  // {10111000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {29, 7, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 6, 0, 0};
  // {01011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {122, 15, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {11, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {64, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {11, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01110111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-18, 7, 0, 0};
  // {00111011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-36, 13, 0, 0};
  // {01111010 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {94, 10, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {00100000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 8, 0, 0};
  // {10001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {81, 0, 0, 0};
  // {11100011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-57, 15, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {18, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_54_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* duration */] < 139.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 68.0f ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 63.0f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                        -0.030994384f : 
                        0.023933697f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.013478483f : 
                        0.2414653f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 24.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 115.0f ? 
                        -0.12161125f : 
                        -0.1475181f) : 
                    0.178534f)) : 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 108.5f ? 
                        -0.108948834f : 
                        -0.13639231f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 1163.5f ? 
                        -0.118434854f : 
                        0.08417141f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 128.0f ? 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.07989771f : 
                        0.10506548f) : 
                    0.22217281f))) : 
         (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 476.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.06645186f : 
                        0.05604405f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 6302.5f ? 
                        0.006645895f : 
                        -0.054371275f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                    0.024527472f : 
                    0.14504938f)) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.0022480201f : 
                        0.1259663f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.008867766f : 
                        0.07031695f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.049627528f : 
                        3.776273E-4f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.040340807f : 
                        0.1480204f)))));
    return pred;
  } // constant pool size = 175B, number of visited nodes = 27, static init size = 390B
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {0, 12, 0, 0};
  // {01110000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {14, 2, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {01111101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {3, 0, 0, 0};
  // {11000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-125, 12, 0, 0};
  // {00010000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 2, 0, 0};
  // {10011010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {89, 13, 0, 0};
  // {00000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 1, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {16, 2, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 0, 0, 0};
  // {11010011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-53, 6, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_55_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* pdays */] < 184.5f ? 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 177.5f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 100.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 83.5f ? 
                        -0.0038951044f : 
                        0.044758245f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                        -0.08694115f : 
                        -0.0141106695f)) : 
                 (data[9 /* day */] < 7.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 146.5f ? 
                        -0.017603748f : 
                        0.16104774f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.011324238f : 
                        0.079220384f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 461.5f ? 
                        -0.061230414f : 
                        -0.20353891f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                        -0.043021865f : 
                        0.09246189f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.096916474f : 
                        0.040219817f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.08894547f : 
                        0.16219175f)))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.033961933f : 
                        -0.011616641f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[15])) ? 
                        0.030127874f : 
                        0.17091827f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                    -0.23114632f : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                        -0.06627328f : 
                        0.12564695f))) : 
             (data[11 /* duration */] < 172.5f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                    -0.11468117f : 
                    0.11358681f) : 
                 (data[9 /* day */] < 5.5f ? 
                    -0.029754182f : 
                     (data[13 /* pdays */] < 320.0f ? 
                        0.24564631f : 
                        0.07917092f)))));
    return pred;
  } // constant pool size = 185B, number of visited nodes = 27, static init size = 450B
  // {10010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-119, 8, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {8, 0, 0, 0};
  // {11010110 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {107, 9, 0, 0};
  // {01111101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-66, 4, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {11111011 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-33, 7, 0, 0};
  // {00111111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-4, 15, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {32, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {11001110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {115, 7, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {01111111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-2, 1, 0, 0};
  // {10000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-127, 2, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_56_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 552.5f ? 
         (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 440.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 406.5f ? 
                        -0.041669272f : 
                        0.05422472f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        -0.05628919f : 
                        0.11506071f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 529.0f ? 
                        -0.09980122f : 
                        0.016049815f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.009707359f : 
                        0.21006055f))) : 
             (data[0 /* age */] < 29.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                        0.017354775f : 
                        -0.03820967f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        0.0040462315f : 
                        0.1340679f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 920.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.011038456f : 
                        0.029703857f) : 
                     (data[11 /* duration */] < 129.5f ? 
                        -0.02772043f : 
                        0.011729257f)))) : 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 87.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.12067102f : 
                        -0.0034726558f) : 
                    -0.17532484f) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (data[5 /* balance */] < 586.5f ? 
                        -0.1388308f : 
                        0.0036924388f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.042265553f : 
                        0.13375081f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 55.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        0.0036248774f : 
                        0.016353926f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.021875039f : 
                        0.05458008f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[10])) ? 
                    -0.192697f : 
                    -0.02008275f))));
    return pred;
  } // constant pool size = 194B, number of visited nodes = 28, static init size = 480B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 8, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {10, 0, 0, 0};
  // {01000000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 7, 0, 0};
  // {00100110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {100, 8, 0, 0};
  // {01000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 2, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {127, 2, 0, 0};
  // {00000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-128, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {7, 0, 0, 0};
  // {01111101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-66, 4, 0, 0};
  // {01101111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-10, 1, 0, 0};
  // {10111101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-67, 12, 0, 0};
  // {00110000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {12, 4, 0, 0};
  // {01000111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-30, 12, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {3, 0, 0, 0};
  // {00010100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {40, 8, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_57_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[5]) || data[5 /* balance */] < 13063.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 2825.0f ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 1393.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 374.5f ? 
                        -0.00934732f : 
                        0.052552216f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 452.5f ? 
                        0.0071992246f : 
                        -0.09254337f)) : 
                -0.09675224f) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                    -0.17894758f : 
                    -0.11521444f) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 127.0f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 86.5f ? 
                        -0.04179815f : 
                        0.25190124f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.19308658f : 
                        -0.10100744f)))) : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 307.5f ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.008556108f : 
                        -0.119548775f) : 
                    0.08893236f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 5.5f ? 
                        0.029249724f : 
                        -0.012765716f) : 
                     (data[9 /* day */] < 7.5f ? 
                        -0.019992618f : 
                        0.035552192f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                     (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                        -0.02381389f : 
                        0.16368207f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.02899522f : 
                        0.20113766f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 29.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.014560321f : 
                        -0.048390552f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.010769756f : 
                        0.10558544f)))));
    return pred;
  } // constant pool size = 157B, number of visited nodes = 25, static init size = 330B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {11101111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-9, 11, 0, 0};
  // {01011001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-102, 15, 0, 0};
  // {00100000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 3, 0, 0};
  // {11011111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-5, 15, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {9, 8, 0, 0};
  // {01000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-94, 2, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-124, 8, 0, 0};
  // {11110010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {79, 15, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_58_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 283.5f ? 
         (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 280.0f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.024627319f : 
                        0.0036499524f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.11145157f : 
                        -0.06652082f)) : 
                 (Double.isNaN(data[14]) || data[14 /* previous */] < 6.0f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        3.5999698E-4f : 
                        0.014039239f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.03376661f : 
                        0.108012296f))) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                 (data[11 /* duration */] < 108.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.114792205f : 
                        0.0875739f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.11682539f : 
                        -0.008306756f)) : 
                 (data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.049322687f : 
                        0.12600242f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[15])) ? 
                        -0.03587969f : 
                        -0.046478726f)))) : 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 678.5f ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 5922.5f ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2873.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.010651106f : 
                        0.005552335f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.015968926f : 
                        0.031984966f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.05893032f : 
                        0.13241632f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.010094768f : 
                        0.106378056f))) : 
            0.11550211f));
    return pred;
  } // constant pool size = 173B, number of visited nodes = 24, static init size = 450B
  // {10011000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {25, 6, 0, 0};
  // {01000111 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-30, 10, 0, 0};
  // {10101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {117, 3, 0, 0};
  // {10010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-119, 12, 0, 0};
  // {01110110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {110, 8, 0, 0};
  // {11011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {123, 3, 0, 0};
  // {10000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 2, 0, 0};
  // {00001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-48, 0, 0, 0};
  // {11111101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-65, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {11, 0, 0, 0};
  // {11110111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-17, 1, 0, 0};
  // {10101101 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-75, 10, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {13, 0, 0, 0};
  // {00110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {76, 0, 0, 0};
  // {10001000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {17, 8, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_59_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 1799.0f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1581.5f ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.077488914f : 
                        -0.028465554f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.013416128f : 
                        0.022813428f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (data[11 /* duration */] < 123.5f ? 
                        -0.024763646f : 
                        0.004161973f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 420.5f ? 
                        0.04083068f : 
                        -0.04177122f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 41.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                    0.027310824f : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        0.080306925f : 
                        0.17772117f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                    -0.08956959f : 
                    0.09979674f))) : 
         (data[9 /* day */] < 7.5f ? 
             (data[5 /* balance */] < 313.5f ? 
                -0.010784667f : 
                -0.17840345f) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.19094919f : 
                        -0.024497215f) : 
                    0.06574677f) : 
                0.10880144f)));
    return pred;
  } // constant pool size = 129B, number of visited nodes = 18, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {11101101 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-73, 6, 0, 0};
  // {11011110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {123, 1, 0, 0};
  // {10100000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {5, 6, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {64, 0, 0, 0};
  // {10111001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-99, 15, 0, 0};
  // {01110101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-82, 7, 0, 0};
  // {11000100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {35, 2, 0, 0};
  // {00110101 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-84, 8, 0, 0};
  // {10111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {93, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_60_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 307.5f ? 
                        -0.05491025f : 
                        -0.14772438f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[15])) ? 
                        -0.09961692f : 
                        -0.020327998f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                    -0.03380179f : 
                    0.09762708f)) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 84.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.03831111f : 
                        -0.010388916f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 240.5f ? 
                        -0.012316903f : 
                        0.031905144f)) : 
                0.122529075f)) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
             (data[9 /* day */] < 4.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.07932864f : 
                        0.007045515f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 230.5f ? 
                        0.032867715f : 
                        0.10534129f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 375.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 306.5f ? 
                        -0.0012245959f : 
                        -0.032912694f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.049153067f : 
                        0.05757764f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 7.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1274.5f ? 
                        -0.025692986f : 
                        0.06840559f) : 
                     (Double.isNaN(data[8 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.006519907f : 
                        0.02864056f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1031.5f ? 
                        0.008459264f : 
                        0.063745484f) : 
                     (data[9 /* day */] < 9.5f ? 
                        0.01113905f : 
                        0.09089824f)))));
    return pred;
  } // constant pool size = 181B, number of visited nodes = 26, static init size = 450B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {11111110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {127, 7, 0, 0};
  // {01100001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-122, 2, 0, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {56, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {14, 0, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 8, 0, 0};
  // {00001001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-112, 1, 0, 0};
  // {11101111 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-9, 5, 0, 0};
  // {00010011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-56, 8, 0, 0};
  // {00111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-4, 3, 0, 0};
  // {11111000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {31, 1, 0, 0};
  // {11111111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-1, 1, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-64, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {8, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_61_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 552.5f ? 
         (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 436.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 430.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.035049196f : 
                        0.041022703f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.08470393f : 
                        0.22523183f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.09491108f : 
                        -0.019939812f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.011268136f : 
                        0.12967342f))) : 
             (data[11 /* duration */] < 79.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 383.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        -0.080063045f : 
                        -0.06187736f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.114817336f : 
                        -0.10491175f)) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.033425633f : 
                        -0.011536771f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.0051522222f : 
                        0.029622488f)))) : 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[15])) ? 
                    -0.23080023f : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.120595954f : 
                        -0.0069683073f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                    -0.10476158f : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1166.5f ? 
                        0.0152433375f : 
                        0.16787943f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 55.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[10])) ? 
                        0.0070195366f : 
                        0.04728776f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[10])) ? 
                        -0.033069678f : 
                        0.016376177f)) : 
                 (data[9 /* day */] < 11.0f ? 
                    -0.16917491f : 
                    -0.041861027f))));
    return pred;
  } // constant pool size = 200B, number of visited nodes = 27, static init size = 540B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, 8, 0, 0};
  // {00010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {40, 2, 0, 0};
  // {00000000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 7, 0, 0};
  // {10000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-127, 2, 0, 0};
  // {00000110 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {96, 10, 0, 0};
  // {11111110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {127, 7, 0, 0};
  // {00000000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 13, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {11011110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {123, 7, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {64, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {7, 0, 0, 0};
  // {11111101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-65, 12, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {10, 0, 0, 0};
  // {01101111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-10, 1, 0, 0};
  // {11111101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-65, 12, 0, 0};
  // {00000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-128, 12, 0, 0};
  // {01101010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {86, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_62_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 1799.0f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1570.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 472.5f ? 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 72.5f ? 
                        -0.034824092f : 
                        0.013113864f) : 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 4.5f ? 
                        0.0036015406f : 
                        -0.035186708f)) : 
                 (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[4])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.009680498f : 
                        0.0057031685f) : 
                     (data[11 /* duration */] < 558.5f ? 
                        0.1908267f : 
                        0.016282529f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 41.5f ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                    -0.009051648f : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1712.5f ? 
                        0.13468666f : 
                        0.052935336f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                    -0.10037099f : 
                    0.09937456f))) : 
         (data[9 /* day */] < 7.5f ? 
             (data[5 /* balance */] < 313.5f ? 
                -0.012341615f : 
                -0.1632255f) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        -0.14411972f : 
                        -0.036423378f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.030451952f : 
                        0.07543878f)) : 
                0.1001626f)));
    return pred;
  } // constant pool size = 123B, number of visited nodes = 19, static init size = 270B
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {14, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01100111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-26, 7, 0, 0};
  // {10111101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-67, 15, 0, 0};
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {3, 2, 0, 0};
  // {00110101 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-84, 8, 0, 0};
  // {11111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {95, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01110111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-18, 14, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_63_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 461.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 380.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.042459454f : 
                        0.03315441f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.018301016f : 
                        0.14567262f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.011595632f : 
                        0.07128341f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 29.5f ? 
                        -0.021970268f : 
                        0.06960372f))) : 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 999.5f ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 27.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.04719501f : 
                        0.03404859f) : 
                     (data[11 /* duration */] < 175.5f ? 
                        -0.084144376f : 
                        0.12820011f)) : 
                0.092734404f)) : 
         (Double.isNaN(data[13]) || data[13 /* pdays */] < 99.5f ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 86.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 76.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        5.276763E-4f : 
                        0.01284306f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.09491351f : 
                        0.009231748f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.061327226f : 
                        0.029484855f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 93.5f ? 
                        0.11071216f : 
                        0.03217771f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.02868489f : 
                        0.016037308f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        -0.03751915f : 
                        0.07200143f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 17.5f ? 
                        -0.050428316f : 
                        0.14086244f) : 
                     (data[11 /* duration */] < 153.5f ? 
                        0.053206097f : 
                        0.13769265f)))));
    return pred;
  } // constant pool size = 174B, number of visited nodes = 28, static init size = 360B
  // {10100001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-123, 8, 0, 0};
  // {11110001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-113, 13, 0, 0};
  // {01000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 2, 0, 0};
  // {01111110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {126, 13, 0, 0};
  // {10010001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-119, 4, 0, 0};
  // {01100010 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {70, 10, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {55, 3, 0, 0};
  // {11011011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-37, 8, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {32, 0, 0, 0};
  // {01001010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {82, 8, 0, 0};
  // {11000000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 7, 0, 0};
  // {10101000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {21, 7, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_64_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 107.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 86.5f ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[15])) ? 
                        -0.06630005f : 
                        0.0056133117f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.0050649606f : 
                        0.080557115f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.040338f : 
                        -0.009671138f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.019845866f : 
                        0.1400217f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 119.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 100.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        0.0015115405f : 
                        0.067610666f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.14250907f : 
                        0.0689477f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 4841.0f ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                        0.020955073f : 
                        0.12660794f) : 
                    -0.13906676f))) : 
         (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
             (data[9 /* day */] < 16.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 67.5f ? 
                        0.007063469f : 
                        -0.07636569f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                        0.041093454f : 
                        0.28778464f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 30.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 70.5f ? 
                        -0.033660565f : 
                        0.062997915f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.0038100504f : 
                        0.31365123f))) : 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1575.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 10811.5f ? 
                        -0.0055848625f : 
                        -0.065839715f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.004258372f : 
                        0.10487204f)) : 
                 (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[6])) ? 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[15])) ? 
                        -0.06972703f : 
                        0.0037097775f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 768.5f ? 
                        0.01844469f : 
                        0.04555544f)))));
    return pred;
  } // constant pool size = 202B, number of visited nodes = 30, static init size = 480B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {11, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {55, 3, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {33, 3, 0, 0};
  // {11110101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-81, 4, 0, 0};
  // {01010011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-54, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {10110111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-19, 9, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 0, 0, 0};
  // {10011000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {25, 2, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {10010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {41, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {11, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_65_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 1799.0f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1531.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1514.5f ? 
                 (data[11 /* duration */] < 177.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 435.5f ? 
                        -0.01054098f : 
                        -0.0575356f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 726.5f ? 
                        0.0024490517f : 
                        0.10756622f)) : 
                -0.07835052f) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 41.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        0.02453175f : 
                        0.122095905f) : 
                    0.15601398f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.18102187f : 
                        -0.009996917f) : 
                    0.10405739f))) : 
         (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
             (data[9 /* day */] < 8.5f ? 
                 (data[5 /* balance */] < 362.5f ? 
                    -0.07755559f : 
                    -0.1900918f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (data[0 /* age */] < 35.5f ? 
                        0.027104871f : 
                        -0.08320615f) : 
                    0.10412834f)) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                    -0.058614124f : 
                    0.06553403f) : 
                0.15010998f)));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 18, static init size = 240B
  // {01000100 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {34, 5, 0, 0};
  // {00011100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {56, 2, 0, 0};
  // {10010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {73, 0, 0, 0};
  // {10100110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {101, 7, 0, 0};
  // {10111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {93, 0, 0, 0};
  // {00110101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-84, 0, 0, 0};
  // {00001011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-48, 8, 0, 0};
  // {11110111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-17, 15, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_66_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[5]) || data[5 /* balance */] < 13063.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 2825.0f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.013747189f : 
                        -0.0011725299f) : 
                     (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                        -0.05766112f : 
                        0.055200428f)) : 
                -0.0892374f) : 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                    -0.17641789f : 
                    -0.06986105f) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 691.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 126.0f ? 
                        -0.008818489f : 
                        -0.13290204f) : 
                    -0.09056574f))) : 
         (Double.isNaN(data[5]) || data[5 /* balance */] < 11773.5f ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 14.5f ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.023817243f : 
                        -0.15464735f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        -0.045649674f : 
                        0.09747636f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 385.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -7.0435903E-4f : 
                        0.017420618f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 8676.5f ? 
                        0.0076089697f : 
                        -0.06800252f))) : 
             (data[5 /* balance */] < 13185.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 33.5f ? 
                        0.19071232f : 
                        -0.08906587f) : 
                    0.18448912f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.14342529f : 
                        3.6289886E-4f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 41.5f ? 
                        0.25386897f : 
                        0.0074450104f)))));
    return pred;
  } // constant pool size = 158B, number of visited nodes = 24, static init size = 360B
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {11101001 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-105, 7, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {14, 0, 0, 0};
  // {11101111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-9, 11, 0, 0};
  // {01010101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-86, 15, 0, 0};
  // {11011111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-5, 15, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {10, 0, 0, 0};
  // {10000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 8, 0, 0};
  // {10110000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {13, 12, 0, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {66, 0, 0, 0};
  // {10111011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-35, 3, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_67_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* balance */] < 48.5f ? 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 422.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 71.5f ? 
                        -0.0480843f : 
                        -0.083537f) : 
                     (data[9 /* day */] < 5.5f ? 
                        0.07742829f : 
                        -0.08088217f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1383.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.017174477f : 
                        0.053739283f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.0778649f : 
                        0.15325752f))) : 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 538.5f ? 
                        -0.026266256f : 
                        0.014179312f) : 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                        -0.049814545f : 
                        0.12856397f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 345.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.01659267f : 
                        0.109697f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.017852385f : 
                        0.1676752f)))) : 
         (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 315.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 304.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 2129.5f ? 
                        -0.0015060413f : 
                        -0.051582657f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 19.0f ? 
                        0.1774809f : 
                        -0.057187714f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 22.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1157.5f ? 
                        -0.036720127f : 
                        -0.084014334f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                        0.018052856f : 
                        0.21527208f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (data[9 /* day */] < 4.5f ? 
                        0.027861835f : 
                        0.0011296172f) : 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 15998.5f ? 
                        0.018316954f : 
                        -0.13582386f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2441.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.09433114f : 
                        0.07745105f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.22752067f : 
                        -0.07144004f)))));
    return pred;
  } // constant pool size = 196B, number of visited nodes = 31, static init size = 420B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {11110011 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-49, 7, 0, 0};
  // {00100000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 12, 0, 0};
  // {11111110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {127, 1, 0, 0};
  // {10010101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-87, 9, 0, 0};
  // {10000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-127, 8, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01011001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-102, 2, 0, 0};
  // {10000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-127, 1, 0, 0};
  // {10001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {17, 2, 0, 0};
  // {00000001 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-128, 9, 0, 0};
  // {10010000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {9, 4, 0, 0};
  // {10010100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {41, 9, 0, 0};
  // {01010110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {106, 1, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_68_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
             (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 384.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 378.5f ? 
                        -0.0801904f : 
                        0.106022194f) : 
                     (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                        4.0178152E-4f : 
                        0.09336692f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 603.5f ? 
                    0.40211406f : 
                    -0.009842066f)) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 19.0f ? 
                     (data[9 /* day */] < 12.5f ? 
                        0.009985572f : 
                        -0.13010077f) : 
                    0.17533183f) : 
                 (data[11 /* duration */] < 76.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 360.5f ? 
                        -0.1036756f : 
                        0.13483633f) : 
                     (data[9 /* day */] < 15.5f ? 
                        0.3100229f : 
                        0.108423285f)))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
             (data[9 /* day */] < 14.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.048801955f : 
                        0.006609475f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.16750477f : 
                        -0.008969885f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.03472423f : 
                        -0.01287757f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.008742997f : 
                        0.08425218f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 16.5f ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 11.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                        -0.01745004f : 
                        0.02016839f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        0.012859313f : 
                        0.121909685f)) : 
                 (data[11 /* duration */] < 145.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 27.5f ? 
                        0.082547024f : 
                        -0.06891051f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 55.5f ? 
                        0.09457916f : 
                        0.023555405f)))));
    return pred;
  } // constant pool size = 179B, number of visited nodes = 28, static init size = 390B
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {3, 0, 0, 0};
  // {10001001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-111, 6, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {11010000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {11, 6, 0, 0};
  // {00010010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {72, 1, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {16, 2, 0, 0};
  // {11111111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-1, 11, 0, 0};
  // {00100000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 12, 0, 0};
  // {11111110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {127, 15, 0, 0};
  // {01110001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-114, 0, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {8, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_69_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 552.5f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 551.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 543.5f ? 
                 (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 419.5f ? 
                        -0.024987971f : 
                        -0.10141362f) : 
                     (data[11 /* duration */] < 76.5f ? 
                        -0.06274875f : 
                        0.0031790712f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        -0.11031709f : 
                        -0.04264341f) : 
                    0.10252956f)) : 
            0.104565136f) : 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 3167.5f ? 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 3.5f ? 
                        -0.08418766f : 
                        0.10282117f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.060609587f : 
                        0.14920048f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[6])) ? 
                        -0.07170027f : 
                        0.037969213f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.090543725f : 
                        0.1277792f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 55.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.005966228f : 
                        0.042047124f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.017559772f : 
                        0.049851675f)) : 
                 (data[9 /* day */] < 11.0f ? 
                    -0.15311857f : 
                    -0.036210854f))));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 21, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10110000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {13, 4, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {3, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {7, 0, 0, 0};
  // {00110101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-84, 4, 0, 0};
  // {01000001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-126, 10, 0, 0};
  // {10100100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {37, 4, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {00000100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {32, 4, 0, 0};
  // {00000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, 12, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_70_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
        0.0873947f : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1796.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1590.0f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 335.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                        -0.01177049f : 
                        0.006277197f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 24.5f ? 
                        4.000887E-4f : 
                        0.014742037f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.059441753f : 
                        0.081168376f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1710.5f ? 
                        0.112756245f : 
                        0.021483826f))) : 
             (data[9 /* day */] < 7.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                    -0.14536524f : 
                    -0.016523309f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.069379754f : 
                        0.024449555f) : 
                    0.086328626f))));
    return pred;
  } // constant pool size = 84B, number of visited nodes = 13, static init size = 180B
  // {10001000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {17, 1, 0, 0};
  // {10111011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-35, 9, 0, 0};
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {3, 2, 0, 0};
  // {11100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {71, 0, 0, 0};
  // {00110101 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-84, 8, 0, 0};
  // {11111010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {95, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_71_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
             (data[9 /* day */] < 11.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 1694.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.044008236f : 
                        -0.009763111f) : 
                    -0.12554468f) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 308.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.009024325f : 
                        0.021110106f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                        -0.005724766f : 
                        0.026171613f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 99.5f ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        0.01724656f : 
                        0.13181746f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.0032381946f : 
                        0.08253246f)) : 
                 (!Double.isNaN(data[15 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.17724997f : 
                        -0.027927125f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.017489655f : 
                        0.06640107f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 60.0f ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 16.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.005232757f : 
                        0.10829859f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 30.5f ? 
                        -0.030775005f : 
                        0.16641298f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1516.5f ? 
                        -0.0071290107f : 
                        0.034839705f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.0063087535f : 
                        0.050713938f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 88.5f ? 
                 (data[11 /* duration */] < 130.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                        -0.09764096f : 
                        0.0057814964f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.03682688f : 
                        0.14536953f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 69.0f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[10])) ? 
                        -0.0136910165f : 
                        0.11279366f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                        -0.14351253f : 
                        -0.036339194f)))));
    return pred;
  } // constant pool size = 197B, number of visited nodes = 30, static init size = 450B
  // {01010001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, 2, 0, 0};
  // {11111111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-1, 11, 0, 0};
  // {00000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 4, 0, 0};
  // {10000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 1, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 2, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {11, 0, 0, 0};
  // {01011111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-6, 7, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10110111 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-19, 9, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 2, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 0, 0, 0};
  // {11000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 1, 0, 0};
  // {01011110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {122, 11, 0, 0};
  // {00100111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-28, 0, 0, 0};
  // {10101001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-107, 15, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_72_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
         (Double.isNaN(data[14]) || data[14 /* previous */] < 6.0f ? 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 922.5f ? 
                        -0.020897873f : 
                        -0.029256687f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 330.5f ? 
                        -0.005190131f : 
                        0.07232452f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (data[9 /* day */] < 7.5f ? 
                        -0.14381436f : 
                        -0.0091284f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        0.048298858f : 
                        0.20791721f))) : 
             (data[13 /* pdays */] < 127.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 233.5f ? 
                        -0.13039385f : 
                        -0.17638986f) : 
                    0.081833616f) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 2582.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.1564617f : 
                        -0.050749954f) : 
                    0.08683384f))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
             (data[9 /* day */] < 16.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        -0.038358834f : 
                        0.0037370045f) : 
                     (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[15])) ? 
                        0.04804093f : 
                        0.1619669f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1283.5f ? 
                        -0.013153279f : 
                        0.02768276f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.008750747f : 
                        0.07569293f))) : 
             (Double.isNaN(data[9]) || data[9 /* day */] < 14.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[10])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.014302334f : 
                        0.022452634f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 339.5f ? 
                        0.03994884f : 
                        -0.018692248f)) : 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 290.5f ? 
                        -0.013450267f : 
                        -0.087699674f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1115.5f ? 
                        0.046132177f : 
                        -0.08417761f)))));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 29, static init size = 450B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 4, 0, 0};
  // {11101100 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {55, 4, 0, 0};
  // {10001011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-47, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {00001011 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-48, 8, 0, 0};
  // {11111001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-97, 3, 0, 0};
  // {00010011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-56, 9, 0, 0};
  // {00001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {16, 2, 0, 0};
  // {11111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-1, 3, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 0, 0, 0};
  // {00000000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 4, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-64, 0, 0, 0};
  // {10000100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {33, 8, 0, 0};
  // {00011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {120, 15, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_73_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 552.5f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 551.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 543.5f ? 
                 (!Double.isNaN(data[7 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.06364979f : 
                        -0.0077142855f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.004359918f : 
                        0.0065639643f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.15650593f : 
                        -0.042159323f) : 
                    0.09138485f)) : 
            0.09015654f) : 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                 (data[5 /* balance */] < 586.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 950.0f ? 
                        -0.12708096f : 
                        0.011720053f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[10])) ? 
                        -0.14337404f : 
                        0.025802549f)) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 12.5f ? 
                        0.06027882f : 
                        -0.109421745f) : 
                    0.120650135f)) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 387.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 55.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        0.0016103988f : 
                        0.011465747f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.016397767f : 
                        0.045193113f)) : 
                 (data[9 /* day */] < 11.0f ? 
                    -0.13131164f : 
                    -0.034613457f))));
    return pred;
  } // constant pool size = 132B, number of visited nodes = 20, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {11110011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-49, 15, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {10110000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {13, 4, 0, 0};
  // {01111111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-2, 14, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {7, 0, 0, 0};
  // {00100101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-92, 0, 0, 0};
  // {11111101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-65, 13, 0, 0};
  // {01000111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-30, 14, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_74_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 179.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.042385615f : 
                        0.06926057f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.019260382f : 
                        0.06769405f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 191.5f ? 
                        -0.15835577f : 
                        0.0049026776f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.05235833f : 
                        0.12428781f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 80.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 28.5f ? 
                        0.0016329559f : 
                        -0.029811813f) : 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 400.5f ? 
                        0.01237143f : 
                        0.24236983f)) : 
                 (data[9 /* day */] < 11.5f ? 
                    -0.17840223f : 
                    0.011775516f))) : 
         (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[4])) ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 902.5f ? 
                        -0.04183634f : 
                        0.0213347f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                        -0.022711754f : 
                        0.033970308f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 7470.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.003700367f : 
                        0.009280641f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.13282867f : 
                        -0.010869371f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 831.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.0047192285f : 
                        0.099200405f) : 
                    -0.09057345f) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                    0.025522275f : 
                    0.23806892f))));
    return pred;
  } // constant pool size = 176B, number of visited nodes = 26, static init size = 420B
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {14, 0, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 8, 0, 0};
  // {10011001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-103, 1, 0, 0};
  // {11111011 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-33, 15, 0, 0};
  // {01000010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {66, 4, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01110111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-18, 7, 0, 0};
  // {00111010 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {92, 9, 0, 0};
  // {11110111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-17, 15, 0, 0};
  // {11100111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-25, 6, 0, 0};
  // {11101110 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {119, 10, 0, 0};
  // {10001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {81, 0, 0, 0};
  // {10100010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {69, 6, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {18, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_75_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* pdays */] < 314.5f ? 
         (Double.isNaN(data[14]) || data[14 /* previous */] < 6.0f ? 
             (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.015915025f : 
                        0.061816353f) : 
                    0.1545577f) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 18.5f ? 
                        0.0061020465f : 
                        -0.017098384f) : 
                     (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                        0.0015244953f : 
                        0.02844436f))) : 
             (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                 (data[9 /* day */] < 11.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        -0.09038058f : 
                        -0.014088148f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
                        0.017839609f : 
                        0.08511587f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                    -0.15269192f : 
                     (data[9 /* day */] < 2.5f ? 
                        -0.034162976f : 
                        0.12947997f)))) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 1095.5f ? 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                     (!Double.isNaN(data[6 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[6])) ? 
                        -0.06278544f : 
                        -0.01390854f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.021028137f : 
                        0.15791242f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[2])) ? 
                        -0.1707569f : 
                        -0.07868117f) : 
                    0.07302873f)) : 
             (Double.isNaN(data[6 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[6])) ? 
                0.08729404f : 
                0.31165534f)));
    return pred;
  } // constant pool size = 165B, number of visited nodes = 22, static init size = 450B
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {3, 0, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-127, 0, 0, 0};
  // {00001000 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {16, 14, 0, 0};
  // {10000011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-63, 13, 0, 0};
  // {01000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {98, 0, 0, 0};
  // {10010000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {9, 3, 0, 0};
  // {00110001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-116, 8, 0, 0};
  // {11001111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-13, 14, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {28, 0, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {34, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {10100000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 4, 0, 0};
  // {00000011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-64, 13, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {4, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_76_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 408.5f ? 
         (data[5 /* balance */] < -59.5f ? 
             (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[10])) ? 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 380.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 358.5f ? 
                        -0.09119861f : 
                        0.08555961f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.13808247f : 
                        -0.10741005f)) : 
                 (Double.isNaN(data[11]) || data[11 /* duration */] < 380.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 373.5f ? 
                        -0.06366047f : 
                        -0.11432231f) : 
                     (data[0 /* age */] < 30.5f ? 
                        0.36851436f : 
                        -0.038462203f))) : 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 443.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 180.5f ? 
                        -0.01742504f : 
                        -0.05551248f) : 
                    -0.09235867f) : 
                 (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.05012313f : 
                        0.021571351f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[10])) ? 
                        0.0037142788f : 
                        0.025805973f)))) : 
         (data[11 /* duration */] < 417.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 21.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 65.5f ? 
                        -0.0379643f : 
                        0.09571493f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 56.5f ? 
                        0.071964554f : 
                        0.23846915f)) : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 1550.5f ? 
                     (data[0 /* age */] < 30.5f ? 
                        0.24802007f : 
                        -0.03276481f) : 
                    0.23142324f)) : 
             (Double.isNaN(data[4 /* default */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (data[4] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 1121.5f ? 
                        -0.014908791f : 
                        0.03267541f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.0053558084f : 
                        0.008810925f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[10])) ? 
                     (Double.isNaN(data[11]) || data[11 /* duration */] < 839.5f ? 
                        0.03518207f : 
                        -0.09948295f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.02428785f : 
                        0.20137274f)))));
    return pred;
  } // constant pool size = 178B, number of visited nodes = 29, static init size = 360B
  // {00000011 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-64, 5, 0, 0};
  // {00001100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {48, 2, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {14, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01010100 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {42, 6, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {64, 0, 0, 0};
  // {10000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {65, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-30, 7, 0, 0};
  // {11100011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-57, 6, 0, 0};
  // {10001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {81, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {18, 0, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_77_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* duration */] < 1724.5f ? 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 1583.5f ? 
             (Double.isNaN(data[11]) || data[11 /* duration */] < 550.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.006843586f : 
                        0.004981203f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        0.004939931f : 
                        0.219429f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 324.5f ? 
                        -0.005021008f : 
                        -0.096358515f) : 
                     (Double.isNaN(data[13]) || data[13 /* pdays */] < 337.0f ? 
                        0.004549061f : 
                        0.033589106f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                    -0.07445439f : 
                    0.09164634f) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                    0.086061336f : 
                    0.118586555f))) : 
         (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[10])) ? 
             (data[9 /* day */] < 7.5f ? 
                -0.14294624f : 
                 (Double.isNaN(data[5]) || data[5 /* balance */] < 1336.5f ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 402.5f ? 
                        -0.019754719f : 
                        -0.1471788f) : 
                    0.06473853f)) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[10])) ? 
                    -0.1319999f : 
                    0.010630393f) : 
                 (Double.isNaN(data[9]) || data[9 /* day */] < 19.5f ? 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[10])) ? 
                        0.07355814f : 
                        0.15414314f) : 
                    -0.033564407f))));
    return pred;
  } // constant pool size = 132B, number of visited nodes = 20, static init size = 300B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10010001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-119, 4, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {32, 0, 0, 0};
  // {11110110 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {111, 11, 0, 0};
  // {10111011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-35, 13, 0, 0};
  // {01111101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-66, 15, 0, 0};
  // {00011111 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-8, 10, 0, 0};
  // {11111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {31, 0, 0, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {56, 0, 0, 0};
  // {00000010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 2, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_78_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* age */] < 83.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 82.5f ? 
             (data[11 /* duration */] < 115.5f ? 
                 (Double.isNaN(data[15 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (data[15] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 4) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[15])) ? 
                     (Double.isNaN(data[5]) || data[5 /* balance */] < 9191.5f ? 
                        -0.030106718f : 
                        0.046549536f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 44.0f ? 
                        -0.004258933f : 
                        0.07057806f)) : 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 311.5f ? 
                     (!Double.isNaN(data[8 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.009108016f : 
                        0.0044835303f) : 
                     (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                        -0.017773727f : 
                        0.14729218f))) : 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 2307.5f ? 
                -0.0016543085f : 
                -0.15058374f)) : 
         (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[10])) ? 
             (Double.isNaN(data[5]) || data[5 /* balance */] < 1016.5f ? 
                0.018939825f : 
                -0.09126688f) : 
            0.11489724f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 12, static init size = 120B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {3, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {28, 0, 0, 0};
  // {11011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {123, 3, 0, 0};
}


class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_79_class_0.score0(fdata);
  }
}
class gbm_b298713c_a0ac_4c98_9f7c_c574162eac3a_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
        0.079278715f : 
         (Double.isNaN(data[11]) || data[11 /* duration */] < 288.5f ? 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 455.5f ? 
                 (Double.isNaN(data[13]) || data[13 /* pdays */] < 393.5f ? 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 4.5f ? 
                        -6.964453E-4f : 
                        -0.048420295f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                        -0.01603544f : 
                        0.1176936f)) : 
                 (Double.isNaN(data[10 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[10]) || (data[10] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.12544318f : 
                        -0.012474587f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.07336172f : 
                        0.17062198f))) : 
             (Double.isNaN(data[13]) || data[13 /* pdays */] < 677.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 75.5f ? 
                     (Double.isNaN(data[12]) || data[12 /* campaign */] < 17.5f ? 
                        0.002185944f : 
                        -0.08816201f) : 
                     (!Double.isNaN(data[10 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[10])) ? 
                        -0.0697156f : 
                        0.08606187f)) : 
                0.10579282f)));
    return pred;
  } // constant pool size = 79B, number of visited nodes = 13, static init size = 150B
  // {01011011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-38, 13, 0, 0};
  // {00010100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10011111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-7, 13, 0, 0};
  // {10111101 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-67, 5, 0, 0};
}


